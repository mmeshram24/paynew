{"version":3,"sources":["variables/general/dashboard-charts.jsx","firebase-config.js","views/general/Dashboard/General.jsx","generateElement.js","views/general/Forms/GetDetails.jsx","components/common/Sidebar/Sidebar.jsx","components/common/ChatSidebar/ChatSidebar.jsx","components/common/Stylebar/Stylebar.jsx","components/common/StyleSettings/StyleSettings.jsx","components/common/Sidebar/LockSidebar.jsx","views/general/Forms/Premade.jsx","views/general/Tables/Tables.jsx","views/general/Tables/BSDatatable.jsx","routes/general.jsx","components/common/Header/Header.jsx","components/common/Footer/Footer.jsx","variables/topbar.jsx","components/common/Chatbar/Favcontacts.jsx","components/common/Chatbar/Allcontacts.jsx","components/common/Chatbar/Chatgroups.jsx","components/common/Notifications/Notifications.jsx","components/common/Messages/Messages.jsx","components/common/Mailbox/Mailbox.jsx","components/general/CardElements/CardAuthor.jsx","components/general/CardElements/CardCategory.jsx","components/general/CardElements/CardSocials.jsx","components/general/CustomButton/CustomButton.jsx","components/general/CustomCheckbox/SimpleCheckbox.jsx","components/general/CustomRadio/CustomRadio.jsx","components/general/FormInputs/FormInputs.jsx","components/general/Navmenudropdown/Navmenudropdown.jsx","components/general/Navmenudropdown/Navmenugroup.jsx","variables/settings/general.jsx","components/general/BlogPosts/BlogPosts.jsx","components/general/SearchPosts/SearchPosts.jsx","components/general/Memberslist/Memberslist.jsx","components/general/Messagewidget/Messagewidget.jsx","getWeb3.js","layouts/General.jsx","components/common/Header/LockedHeader.jsx","views/general/Forms/Register.jsx","routes/locked.jsx","views/general/Forms/Login.jsx","routes/index.jsx","layouts/Locked.jsx","index.js"],"names":["playlistCharts","data","canvas","gradientFill","getContext","createLinearGradient","addColorStop","labels","datasets","label","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","borderWidth","options","maintainAspectRatio","legend","display","tooltips","bodySpacing","mode","intersect","position","xPadding","yPadding","caretPadding","responsive","scales","yAxes","ticks","gridLines","color","zeroLineColor","drawTicks","drawBorder","xAxes","categoryPercentage","barPercentage","maxBarThickness","layout","padding","left","right","top","bottom","playlistCharts3","playlistCharts4","playlistCharts5","playlistCharts1","playlistCharts2","dashboardAllProductsChart","ctx","gradientStroke","dashboardAllProductsChart1","dashboardAllProductsChart2","dashboardAllProductsChart3","module","exports","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","General","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","temp","wrap","_context","prev","next","auth","onAuthStateChanged","user","uid","child","once","snapshot","val","setState","rewards","Rewards","directReferred","DirectReferred","indirectReferred","IndirectReferred","referrerAddress","Referrer","console","log","state","window","location","href","error","stop","data1","str","length","substring","react_default","createElement","className","Row","Col","xs","md","Button","style","height","es","width","marginTop","float","truncate","React","Component","generateElement","msg","errorNode","document","innerHTML","concat","ps","menuColor","menuType","topbarType","topbarColor","FormPremade","onFileUpload","event","files","target","aadharFile1","aadharFile2","swal","content","icon","handleSubmit","mobile","aadharNumber","update","Mobile","AadharNumber","AadharFile1","AadharFile2","KYCSubmitted","then","catch","_this2","htmlFor","type","id","placeholder","value","onChange","multiple","onClick","e","textAlign","Web3","accounts","account","PayzusContract","getValue","web3","givenProvider","eth","getAccounts","sent","undefined","abrupt","Contract","PayzusContractABI","loaded","t0","WhiteListed","handleReferrence","_callee2","result","_context2","methods","addReferrer","send","from","handleTokenChange","_ref3","_callee3","price","_context3","tokenNumbers","bigInt","priceOf","toString","_x","apply","arguments","handleBuyPayzus","_callee4","count","events","_context4","buyTokens","txHash","transactionHash","set","err","rewardsCredited","reward","referredCount","referredCountIndirect","referrer","react_numeric_input_default","min","max","readOnly","Math","pow","paddingTop","aria-hidden","UITables","txArray","isAvailable","Table","header","title","prop","sortable","filterable","body","onSortFunction","date","columnValue","moment","valueOf","customLabels","first","last","show","entries","noResults","UIBSDatatable","cryptos","apiResponse","Table_default","tableHeader","tableBody","keyName","tableClass","rowsPerPage","rowsPerPageOption","initialSort","isAscending","onSort","dashRoutes","path","BASEDIR","name","component","GetDetails","redirect","pathTo","IMGDIR","process","Header","handleLogout","signOut","errorMessage","message","alert","isOpen","userddOpen","searchOpen","messagesddOpen","notificationsddOpen","profilename","profileimg","balance","toggle","bind","assertThisInitialized","userddToggle","messagesddToggle","notificationsddToggle","searchToggle","dashboardRoutes","map","key","collapse","views","pathname","documentElement","classList","refs","sidebarToggle","innerWidth","remove","navtype","add","addEventListener","updateColor","admintype","history","indexOf","_this3","Navbar","expand","Container","fluid","openSidebar","truncateBalance","NavbarBrand","getBrand","Collapse","navbar","marginRight","walletConnected","connectWallet","cursor","Nav","Dropdown","nav","marginLeft","DropdownToggle","caret","src","alt","DropdownMenu","DropdownItem","tag","disconnect","toggle_grid","Footer","default","Date","getYear","rel","currentmenu","Sidebar","activeRoute","opendd","openmenu","profileposition","handleOpendd","handlecurrent","open","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","overflow","textOverflow","routes","Navmenudropdown_Navmenugroup","parentid","data-toggle","to","badge","parent","links","i","push","react_router_dom","activeClassName","children","general_Navmenudropdown_Navmenudropdown","openclass","chatgroups","favcontacts","avatar","status","allcontacts","Favcontact","favcontactsList","ListGroupItem","data-status","ListGroup","Allcontact","allcontactsList","Chatgroup","chatgroupsList","CustomButton","_this$props","simple","round","neutral","iconMini","leftLabel","rightLabel","wd","rest","twitter","facebook","google","linkedin","pinterest","youtube","tumblr","github","behance","dribbble","reddit","stumbleupon","objectWithoutProperties","btnClasses","cx","btn-simple","btn-round","btn-icon","btn-neutral","btn-icon btn-icon-mini","btn-wd","assign","FieldGroup","focus","addonLeft","addonRight","formGroupProps","labelProps","inputProps","inputGroupProps","inputGroupAddonProps","classes","InputGroup","InputGroupAddon","Input","onFocus","onBlur","FormGroup","Label","Navmenudropdown","addClickClass","activate","Navmenugroup","menuStyle","topbarStyle","getWeb3","Promise","resolve","reject","_web","provider","_web2","ethereum","enable","providers","HttpProvider","createBrowserHistory","GeneralLayout","accBalance","getBalance","utils","fromWei","network","net","getNetworkType","menuSettings","topbarSettings","val1","val2","action","mainPanel","scrollTop","scrollingElement","data-menu","data-topbar","data-menutype","data-topbartype","common_Header_Header","common_Sidebar_Sidebar","react_router","exact","render","Dashboard_General","Tables","BSDatatable","Premade","common_Footer_Footer","NavItem","indexRoutes","FormGrid","handleRegister","email","password","createUserWithEmailAndPassword","currentUser","emailVerified","sendEmailVerification","Name","Email","toggleDropDown","toggleSplit","dropdownOpen","splitButtonOpen","Form","row","sm","handleLogin","preventDefault","signInWithEmailAndPassword","LockedHeader","LockSidebar","lockedRoutes","prop2","key2","hist","ReactDOM","basename","getElementById"],"mappings":"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","file":"static/js/main.e934b534.chunk.js","sourcesContent":["// ##############################\r\n// // // Function that converts a hex color number to a RGB color number\r\n// #############################\r\n/*function hexToRGB(hex, alpha) {\r\n    var r = parseInt(hex.slice(1, 3), 16),\r\n    g = parseInt(hex.slice(3, 5), 16),\r\n    b = parseInt(hex.slice(5, 7), 16);\r\n\r\n    if (alpha) {\r\n        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n}*/\r\n\r\n// ##############################\r\n// // // general variables for charts\r\n// #############################\r\nconst primaryColor = \"#26a69a\";\r\nconst accentColor = \"#ff8a65\";\r\nconst purpleColor = \"#7f8ff4\";\r\n//const chartColor = \"#FFFFFF\";\r\n\r\n// ##############################\r\n// // // Dashboard view - Bar Chart - Card\r\n// #############################\r\n\r\nconst playlistCharts = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, primaryColor);\r\n        gradientFill.addColorStop(1, primaryColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Progress\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [50,139,66,176,123,155,80,45,68,80,143,155]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                categoryPercentage: 0.6,\r\n                barPercentage: 0.5,\r\n                maxBarThickness: 8,\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\n\r\nconst playlistCharts3 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, primaryColor);\r\n        gradientFill.addColorStop(1, primaryColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Progress\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [50,39,166,76,123,55,80,145,68,80,143,55]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                categoryPercentage: 0.6,\r\n                barPercentage: 0.5,\r\n                maxBarThickness: 8,\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\nconst playlistCharts4 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, primaryColor);\r\n        gradientFill.addColorStop(1, primaryColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Progress\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [50,39,166,76,23,155,80,45,168,80,143,55]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                categoryPercentage: 0.6,\r\n                barPercentage: 0.5,\r\n                maxBarThickness: 8,\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\nconst playlistCharts5 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, primaryColor);\r\n        gradientFill.addColorStop(1, primaryColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Progress\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [50,139,66,76,123,55,80,145,68,80,43,155]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                categoryPercentage: 0.6,\r\n                barPercentage: 0.5,\r\n                maxBarThickness: 8,\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\nconst playlistCharts1 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, primaryColor);\r\n        gradientFill.addColorStop(1, primaryColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Progress\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [150,339,266,176,233,525,820,452,684,830,423,535]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                categoryPercentage: 0.6,\r\n                barPercentage: 0.5,\r\n                maxBarThickness: 8,\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\n\r\nconst playlistCharts2 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, primaryColor);\r\n        gradientFill.addColorStop(1, primaryColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Progress\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [6550,3439,3366,7622,2333,2255,8440,5545,1168,8330,1443,5255]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                categoryPercentage: 0.6,\r\n                barPercentage: 0.5,\r\n                maxBarThickness: 8,\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n// ##############################\r\n// // // Dashboard view - All Products - Card\r\n// #############################\r\n\r\nconst dashboardAllProductsChart = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#18ce0f');\r\n        gradientStroke.addColorStop(1, primaryColor);\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, \"rgba(38, 166, 154, 0)\");\r\n        gradientFill.addColorStop(1, \"rgba(38, 166, 154, 0)\");\r\n        return {\r\n            labels: [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\r\n            datasets: [{\r\n                label: \"Stats\",\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 0,\r\n                pointHoverBorderWidth: 0,\r\n                pointRadius: 3,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [40, 500, 650, 200, 400, 800, 100, 900,600,355,495,50]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            // display: false,\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:1,\r\n                ticks: {\r\n                    display: true\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n// ##############################\r\n// // // Dashboard view - All Products - Card\r\n// #############################\r\n\r\nconst dashboardAllProductsChart1 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#18ce0f');\r\n        gradientStroke.addColorStop(1, primaryColor);\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, \"rgba(38, 166, 154, 0)\");\r\n        gradientFill.addColorStop(1, \"rgba(38, 166, 154, 1)\");\r\n        return {\r\n            labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\r\n            datasets: [{\r\n                label: \"Stats\",\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 0,\r\n                pointHoverRadius: 0,\r\n                pointHoverBorderWidth: 0,\r\n                pointRadius: 0,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [40, 500, 650, 700, 1200, 1250, 1300, 1900]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            display: false,\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\n// ##############################\r\n// // // Dashboard view - All Products - Card\r\n// #############################\r\n\r\nconst dashboardAllProductsChart2 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#18ce0f');\r\n        gradientStroke.addColorStop(1, primaryColor);\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, \"rgba(38, 166, 154, 0)\");\r\n        gradientFill.addColorStop(1, \"rgba(38, 166, 154, 0)\");\r\n        return {\r\n            labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\r\n            datasets: [{\r\n                label: \"Stats\",\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 2,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [640, 660, 700, 720, 790, 832, 860, 920]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n        display: false\r\n    },\r\n    tooltips: {\r\n      bodySpacing: 4,\r\n      mode:\"nearest\",\r\n      intersect: 0,\r\n      position:\"nearest\",\r\n      xPadding:10,\r\n      yPadding:10,\r\n      caretPadding:10\r\n    },\r\n    responsive: 1,\r\n    /*scales: {\r\n        yAxes: [{\r\n          gridLines: {\r\n              color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n              color: \"rgba(0, 0, 0, 0.07)\",\r\n              drawBorder: false\r\n          }\r\n        }],\r\n        xAxes: [{\r\n          display:0,\r\n          ticks: {\r\n              display: false\r\n          },\r\n          gridLines: {\r\n            color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n            drawTicks: false,\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }]\r\n    },*/\r\n    scales: {\r\n             xAxes: [{\r\n              display:1,\r\n              gridLines: {\r\n                 color: \"rgba(0, 0, 0, 0.01)\",\r\n              },\r\n              ticks: {\r\n                  display: false\r\n              },\r\n\r\n            }],\r\n            yAxes: [{\r\n                categoryPercentage: 0.8,\r\n                barPercentage: 0.6,\r\n                maxBarThickness: 12,\r\n                display:1,\r\n                gridLines: {\r\n                  color: \"rgba(0, 0, 0, 0.01)\",\r\n                },\r\n                ticks: {\r\n                  display: true\r\n                }\r\n            }]\r\n      },\r\n    layout:{\r\n      padding:{left:0,right:0,top:0,bottom:0}\r\n    }\r\n},\r\n}\r\n\r\n\r\n// ##############################\r\n// // // Dashboard view - All Products - Card\r\n// #############################\r\n\r\nconst dashboardAllProductsChart3 = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#18ce0f');\r\n        gradientStroke.addColorStop(1, primaryColor);\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, \"rgba(38, 166, 154, 0)\");\r\n        gradientFill.addColorStop(1, \"rgba(38, 166, 154, 0)\");\r\n        return {\r\n            labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\r\n            datasets: [{\r\n                label: \"Stats\",\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 2,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [640, 660, 700, 720, 790, 832, 860, 920]\r\n            },\r\n            {\r\n                label: \"Downloads\",\r\n                borderColor: accentColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: accentColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 2,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [540, 760, 700, 620, 690, 732, 660, 720]\r\n            },\r\n            {\r\n                label: \"Visitors\",\r\n                borderColor: purpleColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: purpleColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 2,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [740, 760, 800, 720, 690, 832, 760, 820]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n        display: false\r\n    },\r\n    tooltips: {\r\n      bodySpacing: 4,\r\n      mode:\"nearest\",\r\n      intersect: 0,\r\n      position:\"nearest\",\r\n      xPadding:10,\r\n      yPadding:10,\r\n      caretPadding:10\r\n    },\r\n    responsive: 1,\r\n    /*scales: {\r\n        yAxes: [{\r\n          gridLines: {\r\n              color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n              color: \"rgba(0, 0, 0, 0.07)\",\r\n              drawBorder: false\r\n          }\r\n        }],\r\n        xAxes: [{\r\n          display:0,\r\n          ticks: {\r\n              display: false\r\n          },\r\n          gridLines: {\r\n            color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n            drawTicks: false,\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }]\r\n    },*/\r\n    scales: {\r\n             xAxes: [{\r\n              display:1,\r\n              gridLines: {\r\n                 color: \"rgba(0, 0, 0, 0.01)\",\r\n              },\r\n              ticks: {\r\n                  display: false\r\n              },\r\n\r\n            }],\r\n            yAxes: [{\r\n                categoryPercentage: 0.8,\r\n                barPercentage: 0.6,\r\n                maxBarThickness: 12,\r\n                display:1,\r\n                gridLines: {\r\n                  color: \"rgba(0, 0, 0, 0.01)\",\r\n                },\r\n                ticks: {\r\n                  display: true\r\n                }\r\n            }]\r\n      },\r\n    layout:{\r\n      padding:{left:0,right:0,top:0,bottom:0}\r\n    }\r\n},\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    dashboardAllProductsChart,\r\n    dashboardAllProductsChart1,\r\n    dashboardAllProductsChart2,\r\n    dashboardAllProductsChart3,\r\n    playlistCharts,\r\n    playlistCharts3,\r\n    playlistCharts4,\r\n    playlistCharts5,\r\n    playlistCharts1,\r\n    playlistCharts2,\r\n}\r\n","import firebase from \"firebase\"\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAinXClKise_g1cy5YZ6dvx63ZpqyQMI4s\",\r\n    authDomain: \"payzus-trial.firebaseapp.com\",\r\n    databaseURL: \"https://payzus-trial.firebaseio.com\",\r\n    projectId: \"payzus-trial\",\r\n    storageBucket: \"payzus-trial.appspot.com\",\r\n    messagingSenderId: \"201464632352\",\r\n    appId: \"1:201464632352:web:8363065da9b0bf482b1845\",\r\n    measurementId: \"G-KGTJB9ZWR3\"\r\n  };\r\n  // Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebaseApp;","import React from 'react';\r\nimport {\r\n    Row, Col,\r\n    Button\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\n\r\nimport { Line} from 'react-chartjs-2';\r\n\r\n//import styles from 'jvectormap/jquery-jvectormap.css'\r\n\r\n\r\nimport {\r\n    dashboardAllProductsChart,\r\n    //dashboardAllProductsChart1,\r\n\r\n} from 'variables/general/dashboard-charts.jsx';\r\n\r\n//import CountTo from 'react-count-to';\r\n\r\nimport firebaseApp from \"../../../firebase-config\";\r\n\r\nconst database = firebaseApp.database().ref(\"Users\");\r\n\r\nclass General extends React.Component{\r\n\r\n   \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        data1: [],\r\n        rewards:0,\r\n        directReferred:0,\r\n        indirectReferred:0,\r\n        referrerAddress:\"0x00\"\r\n      };\r\n    }\r\n    \r\n    componentDidMount = async () => {\r\n       \r\n        let temp;\r\n\r\n      try{\r\n\r\n        firebaseApp.auth().onAuthStateChanged((user) => {\r\n          if(user){\r\n              var uid = user.uid\r\n                      \r\n              // console.log(uid)\r\n              \r\n              \r\n      \r\n              database\r\n                  .child(uid)\r\n                  .once(\"value\", (snapshot) => {\r\n      \r\n                      temp = snapshot.val();\r\n        \r\n                      // console.log(temp);\r\n                      this.setState({rewards:temp.Rewards, directReferred:temp.DirectReferred, indirectReferred:temp.IndirectReferred, referrerAddress:temp.Referrer});\r\n                      console.log(this.state.rewards)\r\n                                          \r\n                  })\r\n                                \r\n          }\r\n          else{\r\n            // this.props.history.push(\"/home/login\")\r\n            window.location.href=\"/login\"\r\n          }               \r\n        })\r\n      }\r\n\r\n      catch(error){\r\n        console.log(error)\r\n      }\r\n\r\n\r\n    }\r\n    componentWillUnmount(){\r\n     \r\n    }\r\n    \r\n\r\n    \r\n    truncate(str) {\r\n      return str.length > 10  ? str.substring(0,6) + \"...\" + str.substring(38,42): str;\r\n    }\r\n\r\n  \r\n\r\n    render(){\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n\r\n                    <div className=\"page-title\">\r\n                        <div className=\"float-right\">\r\n                            {/* <h1 className=\"title\">DashBoard</h1> */}\r\n                          <Button color=\"primary\">Add funds</Button>\r\n                          <Button color=\"primary\">send</Button>\r\n                         \r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"clearfix\"></div>\r\n                    <div className=\"col-xl-12\">\r\n                        {/* <div className=\"row\">\r\n                                    <div className=\"col-xl-3 col-lg-4 col-md-4 col-sm-6 col-12\">\r\n                                        <div className=\"db_box graph_widget\">\r\n                                        <div className=\"float-left\">\r\n                                          <div className=\"chart-area\" style={{height: 60+'px', maxWidth: 80+'px','marginTop': '-5px','marginBottom': '5px'}}>\r\n                                            <Bar data={playlistCharts3.data} options={playlistCharts3.options} />\r\n                                          </div>\r\n                                        </div>                                        \r\n                                        <div className=\"widdata float-left\">\r\n                                          <h2 className=\"widtitle\">9754</h2>\r\n                                          <p className=\"widtag\">Sales this month</p>\r\n                                        </div> \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-lg-4 col-md-4 col-sm-6 col-12\">\r\n                                        <div className=\"db_box graph_widget\">\r\n                                        <div className=\"float-left\">\r\n                                          <div className=\"chart-area\" style={{height: 60+'px', maxWidth: 80+'px','marginTop': '-5px','marginBottom': '5px'}}>\r\n                                            <Bar data={playlistCharts4.data} options={playlistCharts4.options} />\r\n                                          </div>\r\n                                        </div>                                        \r\n                                        <div className=\"widdata float-left\">\r\n                                          <h2 className=\"widtitle\">$95000</h2>\r\n                                          <p className=\"widtag\">Monthly Earnings</p>\r\n                                        </div> \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-lg-4 col-md-4 col-sm-6 col-12\">\r\n                                        <div className=\"db_box graph_widget\">\r\n                                        <div className=\"float-left\">\r\n                                          <div className=\"chart-area\" style={{height: 60+'px', maxWidth: 80+'px','marginTop': '-5px','marginBottom': '5px'}}>\r\n                                            <Bar data={playlistCharts5.data} options={playlistCharts5.options} />\r\n                                          </div>\r\n                                        </div>                                        \r\n                                        <div className=\"widdata float-left\">\r\n                                          <h2 className=\"widtitle\">89.99%</h2>\r\n                                          <p className=\"widtag\">Target Achieved</p>\r\n                                        </div> \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-lg-4 col-md-4 d-xl-block d-lg-none d-md-none d-sm-block col-sm-6 col-12\">\r\n                                        <div className=\"db_box graph_widget\">\r\n                                        <div className=\"float-left\">\r\n                                          <div className=\"chart-area\" style={{height: 60+'px', maxWidth: 80+'px','marginTop': '-5px','marginBottom': '5px'}}>\r\n                                            <Bar data={playlistCharts.data} options={playlistCharts.options} />\r\n                                          </div>\r\n                                        </div>                                        \r\n                                        <div className=\"widdata float-left\">\r\n                                          <h2 className=\"widtitle\">32000</h2>\r\n                                          <p className=\"widtag\">New Visitors</p>\r\n                                        </div> \r\n                                        </div>\r\n                                    </div>\r\n\r\n                            </div> */}\r\n                            <div style={{height:60+'px'}}></div>\r\n\r\n                          </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className=\"row margin-0\">\r\n\r\n                                 <div className=\"col-12 col-lg-7 col-xl-8 col-md-7\">\r\n                                    <section className=\"box\" >\r\n                                        <header className=\"panel_header\">\r\n                                            <h2 className=\"title float-left\">Balance</h2>\r\n                                            \r\n                                        </header>\r\n                                        <div className=\"content-body\">        <div className=\"row\">\r\n                                                <div className=\"col-12\">\r\n                                                    <div className=\"chart-container\">\r\n                                                        \r\n                                                        <div className=\"chart-area\" style={{height:'300px'}}>\r\n                                                          {/* <h2>Your wallet is empty</h2>\r\n                                                          <Button color=\"primary\"><i class=\"fa fa-plus\" aria-hidden=\"true\" style={{margin:5,marginRight:10}}></i>Add funds</Button> */}\r\n                                                          <Line data={dashboardAllProductsChart.data} options={dashboardAllProductsChart.options}/>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n\r\n                                                </div>      \r\n                                            </div> \r\n                                        </div>\r\n                                    </section>    \r\n                                </div>\r\n\r\n                         <div className=\"col-12 col-lg-5 col-md-5 col-xl-4\">\r\n\r\n                                <section className=\"box \">\r\n                                          <header className=\"panel_header\">\r\n                                              <h2 className=\"title float-left\"> Payzus Token Stats</h2>\r\n                                              \r\n                                          </header>\r\n                                          <div className=\"content-body\">    <div className=\"row margin-0\">\r\n                                                  <div className=\"col-12\">\r\n                                                      <div className=\"wid-vectormap mapsmall\">\r\n                                                          <div className=\"row\">\r\n                                                              <div style={{width: 100+'%', height: 250}}>\r\n                                                                    <ul style={{marginTop:\"30px\"}}>\r\n                                                                      <p><li>Rewards:          <span style={{float:\"right\"}}>{this.state.rewards} PZS</span></li></p>\r\n                                                                      <p><li>DirectReferred:   <span style={{float:\"right\"}}>{this.state.directReferred}</span></li></p>\r\n                                                                      <p><li>IndirectReferred: <span style={{float:\"right\"}}>{this.state.indirectReferred}</span></li></p>\r\n                                                                      <p><li>Your referrer:    <span style={{float:\"right\"}}>{this.truncate(this.state.referrerAddress)}</span></li></p>\r\n                                                                    </ul>\r\n                                                            \r\n                                                                    \r\n                                                                </div>\r\n                                                              {/* <div className=\"map_progress col-12 col-md-12\" style={{'marginTop': '-15px'}}>\r\n                                                                  <h5>Unique Visitors</h5>\r\n                                                                  <span className='text-muted'>Last Week Rise by 62%</span>\r\n                                                                  <div className=\"progress\"><div className=\"progress-bar progress-bar-primary\" role=\"progressbar\" aria-valuenow=\"62\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width: 62+'%'}}></div></div>\r\n                                                                  <br/>\r\n                                                                  <h5>Registrations</h5>\r\n                                                                  <span className='text-muted'>Up by 57% last 7 days</span>\r\n                                                                  <div className=\"progress\"><div className=\"progress-bar progress-bar-primary\" role=\"progressbar\" aria-valuenow=\"57\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width: 57+'%'}}></div></div>\r\n                                                              </div> */}\r\n                                                          </div>\r\n                                                      </div>\r\n                                                  </div>      \r\n                                              </div>\r\n\r\n                                          </div>\r\n                                      </section>\r\n \r\n                          </div>\r\n\r\n\r\n                          </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"row margin-0\">\r\n                        \r\n                        <div className=\"col-12 col-lg-6 col-md-6\">\r\n                            <section className=\"box \">\r\n                                <header className=\"panel_header\">\r\n                                    <h2 className=\"title float-left\">All Assets</h2>\r\n                                    \r\n                                </header>\r\n                                <div className=\"content-body\">        <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"chart-container\">\r\n\r\n                                             \r\n\r\n\r\n                                            </div>\r\n                                        </div>  \r\n\r\n                                    </div> \r\n                                </div>\r\n                            </section>    \r\n                          </div>\r\n                          \r\n\r\n                    </div>\r\n\r\n                  </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default General;\r\n","export default function generateElement(msg){\r\n    let errorNode = document.createElement(\"div\");\r\n    errorNode.innerHTML = `${msg}`;\r\n    return errorNode;\r\n  }","import React from 'react';\r\nimport {\r\n    Row, Col\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\nimport swal from \"sweetalert\";\r\nimport generateElement from \"../../../generateElement\";\r\n// import web3 from \"web3\";\r\n// import PayzusContractABI from \"../../../contracts/pyzusReferral.json\";\r\nimport firebaseApp from '../../../firebase-config';\r\n\r\nconst database = firebaseApp.database().ref(\"Users\");\r\n\r\nclass FormPremade extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            uid:\"\",\r\n            mobile:\"\",\r\n            aadharNumber:\"\",\r\n            aadharFile1:null,\r\n            aadharFile2:null\r\n            \r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n        // let uid;\r\n\r\n        // await firebaseApp.auth().onAuthStateChanged(function(user) {\r\n        //     if(user){\r\n        //         user = firebaseApp.auth().currentUser;\r\n        //         uid = user.uid;\r\n        //     }\r\n        // })\r\n\r\n        await this.setState({uid:this.props.uid});\r\n\r\n        console.log(this.state.uid);\r\n       \r\n    }\r\n\r\n    onFileUpload = (event) => {\r\n\r\n     let files = event.target.files;\r\n\r\n        files.length === 2 \r\n        ?   \r\n           this.setState({aadharFile1: files[0], aadharFile2:files[1]}, () => {\r\n               console.log(this.state.aadharFile1) \r\n               console.log(this.state.aadharFile2)\r\n            })\r\n            // this.setState({aadharFile2: files[1]}, () => {console.log(this.state.aadharFile2)})\r\n           \r\n        : \r\n\r\n        swal({\r\n            content: generateElement(`Please select 2 files both front and back`),\r\n            icon: \"error\",\r\n\r\n        });\r\n\r\n\r\n   \r\n    }\r\n\r\n    handleSubmit = () => {\r\n\r\n        var mobile = this.state.mobile;\r\n        var aadharNumber = this.state.aadharNumber;\r\n        var aadharFile1 = this.state.aadharFile1;\r\n        var aadharFile2 = this.state.aadharFile2;\r\n\r\n        if(aadharFile1 === null || aadharFile2 === null){\r\n            swal({\r\n                content: generateElement(`Please upload 2 files both front and back`),\r\n                icon: \"error\",\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        database\r\n            .child(this.state.uid)\r\n            .update({Mobile:mobile, AadharNumber: aadharNumber, AadharFile1: aadharFile1, AadharFile2: aadharFile2 ,KYCSubmitted:true})\r\n            .then(() => {\r\n\r\n                swal({\r\n                    content: generateElement(`Your KYC is submitted`),\r\n                    icon: \"info\",\r\n                  });\r\n                \r\n            })\r\n            .catch((error) =>  {\r\n                console.log(error);\r\n            })\r\n\r\n        this.setState({mobile:\"\", aadharNumber:\"\", aadharFile1:null, aadharFile2:null})    \r\n                  \r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <div className=\"page-title\">\r\n                                <div className=\"float-left\">\r\n                                    <h1 className=\"title\">Get Your KYC Done</h1>\r\n                                </div>\r\n                            </div>\r\n\r\n                                <div className=\"row margin-0\">\r\n                                    <div className=\"col-12\">\r\n                                        <section className=\"box \">\r\n                                            <header className=\"panel_header\" >\r\n                                                <h2 className=\"title float-left\"></h2>\r\n                                                \r\n                                            </header>\r\n                                            <div className=\"content-body\">\r\n                                                <div className=\"row\">\r\n                                                        <div className=\"col-12 col-sm-12 col-md-10 col-lg-10 col-xl-8\">\r\n                                                            \r\n                                                            <form>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label htmlFor=\"inputAddress\">Your Mobile</label>\r\n                                                                    <input type=\"text\"  className=\"form-control\" id=\"inputMobile\" placeholder=\"\"\r\n                                                                        value={this.state.mobile}\r\n                                                                        onChange={event => this.setState({mobile:event.target.value})}\r\n                                                                    />\r\n\r\n                                                                </div>\r\n                                                                <div className=\"form-group\">                                                                  \r\n                                                                    <label htmlFor=\"inputEmail4\">Aadhar Number</label>\r\n                                                                    <input type=\"text\" className=\"form-control\" id=\"inputAadhar\" placeholder=\"\"\r\n                                                                        value={this.state.aadharNumber}\r\n                                                                        onChange={event => this.setState({aadharNumber:event.target.value})}\r\n                                                                    />                                                                                                                                     \r\n                                                                </div>\r\n                                                                \r\n                                                                <div className=\"form-group\">                                                                  \r\n                                                                    <label htmlFor=\"inputEmail4\">Upload Aadhar</label>\r\n                                                                    <input type=\"file\" className=\"form-control\" id=\"uploadAadhar\" multiple placeholder=\"\"\r\n                                                                       onChange={event => this.onFileUpload(event)}\r\n                                                                       onClick={(e) => (e.target.value = null)}\r\n                                                                    />                                                                                                                                     \r\n                                                                </div>\r\n                                                                <p style={{color:\"#26a69a\"}}>Please Upload both front and back</p>\r\n                                                            </form>\r\n                                                                <div className=\"col-md-12\" style={{textAlign:\"center\",marginTop:'20px'}}>\r\n                                                                    <button type=\"submit\" className=\"btn btn-primary\" \r\n                                                                        onClick={this.handleSubmit}\r\n                                                                        style={{width:'150px'}}\r\n                                                                    >\r\n                                                                        Submit\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                \r\n                                                            \r\n\r\n                                                        </div>\r\n                                                    \r\n                                                    \r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </section>\r\n                                    </div>\r\n                                </div>\r\n                                                            \r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormPremade;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav } from 'reactstrap';\r\n\r\nimport { Navmenudropdown } from 'components';\r\nimport { Navmenugroup } from 'components';\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n//import useravatar from \"assets/img/profile.jpg\";\r\n// import logofull from \"assets/img/logo-full.png\";\r\n// import logomini from \"assets/img/logo-mini.png\";\r\n// import logofulldark from \"assets/img/logo-full-dark.png\";\r\n// import logominidark from \"assets/img/logo-mini-dark.png\";\r\n\r\nvar ps;\r\nvar currentmenu = \"notset\";\r\n\r\nvar IMGDIR = process.env.REACT_APP_IMGDIR;\r\n\r\nclass Sidebar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.activeRoute.bind(this);\r\n        this.state = {\r\n          opendd: '',\r\n          openmenu: 'none',\r\n          profilename: 'Eric Nelson',\r\n          profileimg: IMGDIR+'/images/profile/profile.jpg',\r\n          profileposition: 'Web Developer',\r\n        };\r\n        this.handleOpendd = this.handleOpendd.bind(this);\r\n        this.handlecurrent = this.handlecurrent.bind(this);\r\n\r\n    }\r\n\r\n    truncate(str) {\r\n        return str.length > 10  ? str.substring(0,6) + \"...\" + str.substring(38,42): str;\r\n    }\r\n\r\n    handlecurrent(currentmenu) {   \r\n       //console.log(\"handlecurrent\"+currentmenu);\r\n       if(this.state.opendd !== \"\"){\r\n           currentmenu = \"\"; \r\n       }\r\n    }\r\n\r\n    handleOpendd(open) {  \r\n        currentmenu = \"\";\r\n        if(this.state.opendd === open){\r\n            this.setState({     \r\n                opendd: ''    \r\n            });  \r\n        } else {\r\n            this.setState({     \r\n                opendd: open    \r\n            });  \r\n        }\r\n        //currentmenu = \"\";\r\n        //console.log(open + this.state.opendd);\r\n    }\r\n    \r\n\r\n    // verifies if routeName is the one active (in browser input)\r\n    activeRoute(routeName) {\r\n        return this.props.location.pathname.indexOf(routeName) > -1 ? ' active' : '';\r\n    }\r\n    componentDidMount(){\r\n\r\n        if(this.props.admintype === 'general'){\r\n            this.setState({     \r\n                profileposition: '',\r\n                profileimg: IMGDIR+'',\r\n                profilename: ''\r\n            });  \r\n        }\r\n\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps = new PerfectScrollbar(this.refs.sidebar,{suppressScrollX: true, suppressScrollY: false});\r\n        }\r\n\r\n\r\n    }\r\n    componentWillUnmount(){\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps.destroy();\r\n        }\r\n    }\r\n    render(){\r\n        \r\n        const children = (child, parent) => {\r\n            var links = [];\r\n            if (child) {\r\n                for (var i = 0; i < child.length; i++) {\r\n                    links.push(\r\n                        <li key={i}>\r\n                            <NavLink to={child[i].path} className=\"nav-link\" activeClassName=\"active\">\r\n                                <span>{child[i].name}</span>\r\n                            </NavLink>\r\n                        </li>\r\n                    );\r\n                    //console.log(child[i].parent + this.props.location.pathname + child[i].path);\r\n                    if(this.props.location.pathname === child[i].path){\r\n                        //console.log(\"match found \" + child[i].parent);\r\n                        if(currentmenu === \"notset\" && this.state.opendd === \"\"){\r\n                            currentmenu = parent; //child[i].parent;\r\n                        }\r\n                    }\r\n                    if(this.props.location.pathname === \"/\"){\r\n                        currentmenu = \"dashboards\";\r\n                    }\r\n                }\r\n\r\n                //console.log(currentmenu);\r\n                //console.log(this.props.location.pathname);\r\n                //console.log(parent);\r\n                return <Nav>{links}</Nav>\r\n            }\r\n        }\r\n        \r\n\r\n\r\n        return (\r\n            <div className=\"sidebar menubar\" data-color=\"black\">\r\n\r\n                <div className=\"logo\">\r\n                    {/* <a href=\"/\" className=\"logo-mini\">\r\n                        <div className=\"logo-img\">\r\n                            <img src={logomini} alt=\"react-logo\" className=\"light-logo\" />\r\n                            <img src={logominidark} alt=\"react-logo\" className=\"dark-logo\"/>\r\n                        </div>\r\n                    </a>\r\n                    <a href=\"/\" className=\"logo-full\">\r\n                            <img src={logofull} alt=\"react-logo\" className=\"light-logo\"/>\r\n                            <img src={logofulldark} alt=\"react-logo\" className=\"dark-logo\"/>\r\n                    </a> */}\r\n                </div> \r\n                \r\n                <div className=\"sidebar-wrapper\" ref=\"sidebar\">\r\n                <div className=\"profile-info row\">\r\n                    <div className=\"profile-image col-4\">\r\n                        {/* <a href=\"#!\"> */}\r\n                            <img alt=\"\" src={this.state.profileimg} className=\"img-fluid avatar-image\"/>\r\n                        {/* </a> */}\r\n                    </div>\r\n                    <div className=\"profile-details col-8\">\r\n                        <h3>\r\n                            <a href = \"#!\" style={{overflow: 'hidden', textOverflow: 'ellipsis'}}>{this.truncate(this.props.account)}</a>\r\n                            <span className=\"profile-status online\"></span>\r\n                        </h3>\r\n                        <p className=\"profile-title\">\r\n                            { \r\n                            this.props.account === \"\"\r\n                            ? <span style={{color:\"white\"}}>MetaMask</span>\r\n                            : <span style={{color:\"#26a69a\"}}>MetaMask</span>\r\n                            }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                    <Nav className=\"navigation\">\r\n                        {\r\n                            this.props.routes.map((prop,key) => {\r\n                                if(prop.redirect)\r\n                                    return null;\r\n                                if(prop.type === \"child\")\r\n                                    return null;\r\n                                if(prop.type === \"navgroup\")\r\n                                    return ( \r\n                                      <Navmenugroup name={prop.name} key={key}>\r\n                                      </Navmenugroup>\r\n                                    );\r\n                                if(prop.type === \"dropdown\")\r\n                                    return ( \r\n\r\n                                        <li className={(prop.parentid) + \" \" + (( ( (prop.parentid === currentmenu) && (prop.parentid !== \"\") && (prop.parentid !== \"multipurpose\") ) || (this.state.opendd === prop.name)) ? 'active': '') + ' nav-parent '} data-toggle=\"collapse\" key={key}>\r\n                                            <a to={prop.path} className=\"nav-link\" onClick={() => this.handleOpendd(prop.name)} href=\"#!\">\r\n                                                        <i className={\"i-\"+prop.icon}></i>\r\n                                                        <p>{prop.name}</p>\r\n                                                        <span className=\"badge\">{prop.badge}</span>\r\n                                                        <span className={\"arrow i-arrow-left\"}></span>\r\n                                            </a>\r\n                                            { children(prop.child, prop.parentid) }\r\n                                        </li>\r\n\r\n                                    );\r\n\r\n                                if(prop.type === \"dropdown-backup\")\r\n                                    return ( \r\n                                      <Navmenudropdown name={prop.name} icon={prop.icon} path={prop.path} badge={prop.badge} child={prop.child} key={key} openclass={this.state.opendd === prop.name ? 'activethis': ''}  onClick={() => this.handleOpendd(prop.name)}>\r\n                                      </Navmenudropdown>\r\n                                    );\r\n                                return (\r\n                                    <li className={this.activeRoute(prop.path) + ' nav-parent '} key={key} onClick={() => this.handleOpendd(prop.name)}>\r\n                                        <NavLink to={prop.path} className=\"nav-link\" activeClassName=\"active\">\r\n                                            <i className={\"i-\"+prop.icon}></i>\r\n                                            <p>{prop.name}</p>\r\n                                            <span className=\"badge\">{prop.badge}</span>\r\n                                        </NavLink>\r\n                                  </li>\r\n                                );\r\n                            })\r\n\r\n                        }\r\n\r\n                    </Nav>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { Form, FormGroup, Input } from 'reactstrap';\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nimport {\r\n    Favcontacts, Allcontacts, Chatgroups\r\n} from 'components';\r\n\r\nimport { favcontacts, allcontacts, chatgroups } from 'variables/topbar.jsx';\r\n\r\nvar ps; \r\n\r\nclass ChatSidebar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.activeRoute.bind(this);\r\n    }\r\n    // verifies if routeName is the one active (in browser input)\r\n    activeRoute(routeName) {\r\n        return this.props.location.pathname.indexOf(routeName) > -1 ? 'active' : '';\r\n    }\r\n    componentDidMount(){\r\n        \r\n        if(this.props.chatwidth === \"open\"){\r\n            document.documentElement.classList.add('nav-toggle-chat');\r\n        } else {\r\n            document.documentElement.classList.remove('nav-toggle-chat');\r\n        }\r\n        \r\n        if(this.props.chattype === \"squeeze\"){\r\n            document.documentElement.classList.add('nav-chat-squeeze');\r\n        } else {\r\n            document.documentElement.classList.remove('nav-chat-squeeze');\r\n        }\r\n\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps = new PerfectScrollbar(this.refs.chatbar,{suppressScrollX: true, suppressScrollY: false});\r\n        }\r\n\r\n    }\r\n    componentWillUnmount(){ \r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps.destroy();\r\n        }\r\n    }\r\n    render(){\r\n        return ( \r\n            <div className=\"sidebar chatbar\">\r\n                \r\n                <div className=\"sidebar-wrapper\" ref=\"chatbar\">\r\n\r\n                                <Form className=\"chat-search\">\r\n                                    <FormGroup>\r\n                                      <Input type=\"text\" name=\"search\" id=\"chatsearch\" placeholder=\"Search\" />\r\n                                    </FormGroup>\r\n                                </Form>\r\n                                <h4 className=\"group-head\">Groups</h4>\r\n                                <Chatgroups chatgroups={chatgroups}/>\r\n                                <h4 className=\"group-head\">Favourites</h4>\r\n                                <Favcontacts favcontacts={favcontacts}/>\r\n                                <h4 className=\"group-head\">All Contacts</h4>\r\n                                <Allcontacts allcontacts={allcontacts}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChatSidebar;\r\n","import React from 'react';\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nvar menuColor;\r\nvar menuType;\r\nvar topbarType;\r\nvar topbarColor;\r\nvar ps;\r\n\r\nclass Stylebar extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.menuToggle = this.menuToggle.bind(this);\r\n        this.topbarToggle = this.topbarToggle.bind(this);\r\n    }\r\n    menuToggle(e){\r\n\r\n        var dataid = e.currentTarget.dataset.id;\r\n        menuColor = dataid;\r\n\r\n        if(dataid === \"black\" || dataid === \"image3\" || dataid === \"image4\") {\r\n            menuType = \"dark\";\r\n        } else if(dataid === \"white\" || dataid === \"transparent\" || dataid === \"image1\" || dataid === \"image2\") {\r\n            menuType = \"light\";\r\n        } else if(dataid === \"teal\" || dataid === \"purple\" || dataid === \"orange\" || dataid === \"pink\" || dataid === \"red\") {\r\n            menuType = \"colored\";\r\n        }\r\n\r\n        this.props.menuSettings(menuColor, menuType);\r\n\r\n    }\r\n     topbarToggle(e){\r\n\r\n        var dataid = e.currentTarget.dataset.id;\r\n        topbarColor = dataid;\r\n\r\n        if(dataid === \"black\" || dataid === \"image3\" || dataid === \"image4\") {\r\n            topbarType = \"dark\";\r\n        } else if(dataid === \"white\" || dataid === \"transparent\" || dataid === \"image1\" || dataid === \"image2\") {\r\n            topbarType = \"light\";\r\n        } else if(dataid === \"teal\" || dataid === \"purple\" || dataid === \"orange\" || dataid === \"pink\" || dataid === \"red\") {\r\n            topbarType = \"colored\";\r\n        }\r\n\r\n        this.props.topbarSettings(topbarColor, topbarType);\r\n\r\n    }\r\n    openStyle(){\r\n        document.documentElement.classList.toggle('nav-toggle-style');\r\n       // this.refs.chatToggle.classList.toggle('toggled');\r\n\r\n        // close menu bar if open on smaller screens\r\n        /*if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }*/\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps = new PerfectScrollbar(this.refs.stylebar,{suppressScrollX: true, suppressScrollY: false});\r\n        }\r\n\r\n    }\r\n    componentWillUnmount(){ \r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps.destroy();\r\n        }\r\n    }\r\n    render(){\r\n        return ( \r\n            <div className=\"sidebar stylebar\">\r\n                \r\n\r\n                                <div className=\"navbar-toggle style-toggle\" onClick={() => this.openStyle()}>\r\n                                            <i className=\"i-settings\"></i>\r\n                                </div>\r\n                <div className=\"sidebar-wrapper\" ref=\"stylebar\">\r\n\r\n\r\n                        <div className=\"style-settings\" ref=\"SettingsToggle\">\r\n\r\n                        <div className=\"style-wrap\" ref=\"stylebar\">\r\n                                <p>Menu Style</p>\r\n                                 <ul className=\"menu\">\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"black\">Black <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"white\">White <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"teal\">Teal <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"orange\">Orange <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"purple\">Purple <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"pink\">Pink <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"red\">Red <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"transparent\">Transparent <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"image1\">Image 1 <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"image2\">Image 2 <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"image3\">Image 3 <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.menuToggle(e)} data-id=\"image4\">Image 4 <i className=\"i-check\"></i></li>\r\n                                 </ul>\r\n                                <p>Top Bar Style</p>\r\n                                 <ul className=\"topbar\">\r\n                                 <li onClick={(e) => this.topbarToggle(e)} data-id=\"transparent\">Transparent <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"black\">Black <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"white\">White <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"teal\">Teal <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"orange\">Orange <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"purple\">Purple <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"pink\">Pink <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"red\">Red <i className=\"i-check\"></i></li>\r\n                                    {/* <li onClick={(e) => this.topbarToggle(e)} data-id=\"transparent\">Transparent <i className=\"i-check\"></i></li> */}\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"image1\">Image 1 <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"image2\">Image 2 <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"image3\">Image 3 <i className=\"i-check\"></i></li>\r\n                                    <li onClick={(e) => this.topbarToggle(e)} data-id=\"image4\">Image 4 <i className=\"i-check\"></i></li>\r\n                                 </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stylebar;\r\n","import React from 'react';\r\n//import { Button } from 'reactstrap';\r\n// used for making the prop types of this component\r\n//import PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nvar menuColor;\r\nvar menuType;\r\nvar topbarType;\r\nvar topbarColor;\r\nvar ps;\r\n\r\nclass StyleSettings extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.menuToggle = this.menuToggle.bind(this);\r\n        this.topbarToggle = this.topbarToggle.bind(this);\r\n        this.OpenSettings = this.OpenSettings.bind(this);\r\n    }\r\n\r\n    OpenSettings(e){\r\n        this.refs.SettingsToggle.classList.toggle('open');\r\n    }\r\n    menuToggle(e){\r\n\r\n        var dataid = e.currentTarget.dataset.id;\r\n        menuColor = dataid;\r\n\r\n        if(dataid === \"black\") {\r\n            menuType = \"dark\";\r\n        } else if(dataid === \"white\" || dataid === \"transparent\") {\r\n            menuType = \"light\";\r\n        } else if(dataid === \"teal\" || dataid === \"purple\" || dataid === \"orange\" || dataid === \"pink\" || dataid === \"red\") {\r\n            menuType = \"colored\";\r\n        }\r\n\r\n        this.props.menuSettings(menuColor, menuType);\r\n\r\n    }\r\n\r\n     topbarToggle(e){\r\n\r\n        var dataid = e.currentTarget.dataset.id;\r\n        topbarColor = dataid;\r\n\r\n        if(dataid === \"black\") {\r\n            topbarType = \"dark\";\r\n        } else if(dataid === \"white\" || dataid === \"transparent\") {\r\n            topbarType = \"light\";\r\n        } else if(dataid === \"teal\" || dataid === \"purple\" || dataid === \"orange\" || dataid === \"pink\" || dataid === \"red\") {\r\n            topbarType = \"colored\";\r\n        }\r\n\r\n        this.props.topbarSettings(topbarColor, topbarType);\r\n\r\n    }\r\n    componentDidMount(){\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps = new PerfectScrollbar(this.refs.stylebar,{suppressScrollX: true, suppressScrollY: false});\r\n        }\r\n    }\r\n    componentWillUnmount(){\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps.destroy();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <div className=\"style-settings\" ref=\"SettingsToggle\">\r\n                <div className=\"style-toggle\" onClick={() => this.OpenSettings()}><i className=\"i-settings\"></i></div>\r\n                <div className=\"style-wrap\" ref=\"stylebar\">\r\n                        <p>Menu Style</p>\r\n                         <ul className=\"menu\">\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"black\">Black <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"white\">White <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"teal\">Teal <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"orange\">Orange <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"purple\">Purple <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"pink\">Pink <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"red\">Red <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"transparent\">Transparent <i className=\"i-check\"></i></li>\r\n                         </ul>\r\n                        <p>Top Bar Style</p>\r\n                         <ul className=\"topbar\">\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"black\">Black <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"white\">White <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"teal\">Teal <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"orange\">Orange <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"purple\">Purple <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"pink\">Pink <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"red\">Red <i className=\"i-check\"></i></li>\r\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"transparent\">Transparent <i className=\"i-check\"></i></li>\r\n                         </ul>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default StyleSettings;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav } from 'reactstrap';\r\n\r\nimport { Navmenudropdown } from 'components';\r\nimport { Navmenugroup } from 'components';\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n//import useravatar from \"assets/img/profile.jpg\";\r\n// import logofull from \"assets/img/logo-full.png\";\r\n// import logomini from \"assets/img/logo-mini.png\";\r\n// import logofulldark from \"assets/img/logo-full-dark.png\";\r\n// import logominidark from \"assets/img/logo-mini-dark.png\";\r\n\r\nvar ps;\r\nvar currentmenu = \"notset\";\r\n\r\nvar IMGDIR = process.env.REACT_APP_IMGDIR;\r\n\r\nclass Sidebar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.activeRoute.bind(this);\r\n        this.state = {\r\n          opendd: '',\r\n          openmenu: 'none',\r\n          profilename: 'Eric Nelson',\r\n          profileimg: IMGDIR+'/images/profile/profile.jpg',\r\n          profileposition: 'Web Developer',\r\n        };\r\n        this.handleOpendd = this.handleOpendd.bind(this);\r\n        this.handlecurrent = this.handlecurrent.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handlecurrent(currentmenu) {   \r\n       //console.log(\"handlecurrent\"+currentmenu);\r\n       if(this.state.opendd !== \"\"){\r\n           currentmenu = \"\"; \r\n       }\r\n    }\r\n\r\n    handleOpendd(open) {  \r\n        currentmenu = \"\";\r\n        if(this.state.opendd === open){\r\n            this.setState({     \r\n                opendd: ''    \r\n            });  \r\n        } else {\r\n            this.setState({     \r\n                opendd: open    \r\n            });  \r\n        }\r\n        //currentmenu = \"\";\r\n        //console.log(open + this.state.opendd);\r\n    }\r\n    \r\n\r\n    // verifies if routeName is the one active (in browser input)\r\n    activeRoute(routeName) {\r\n        return this.props.location.pathname.indexOf(routeName) > -1 ? ' active' : '';\r\n    }\r\n    componentDidMount(){\r\n\r\n        if(this.props.admintype === 'general'){\r\n            this.setState({     \r\n                profileposition: '',\r\n                profileimg: IMGDIR+'',\r\n                profilename: ''\r\n            });  \r\n        \r\n            }\r\n\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps = new PerfectScrollbar(this.refs.sidebar,{suppressScrollX: true, suppressScrollY: false});\r\n        }\r\n\r\n        //console.log(this.props.location.pathname);\r\n\r\n\r\n    }\r\n    componentWillUnmount(){\r\n        if(navigator.platform.indexOf('Win') > -1){\r\n            ps.destroy();\r\n        }\r\n    }\r\n    render(){\r\n        \r\n        const children = (child, parent) => {\r\n            var links = [];\r\n            if (child) {\r\n                for (var i = 0; i < child.length; i++) {\r\n                    links.push(\r\n                        <li key={i}>\r\n                            <NavLink to={child[i].path} className=\"nav-link\" activeClassName=\"active\">\r\n                                <span>{child[i].name}</span>\r\n                            </NavLink>\r\n                        </li>\r\n                    );\r\n                    //console.log(child[i].parent + this.props.location.pathname + child[i].path);\r\n                    if(this.props.location.pathname === child[i].path){\r\n                        //console.log(\"match found \" + child[i].parent);\r\n                        if(currentmenu === \"notset\" && this.state.opendd === \"\"){\r\n                            currentmenu = parent; //child[i].parent;\r\n                        }\r\n                    }\r\n                    if(this.props.location.pathname === \"/\"){\r\n                        currentmenu = \"dashboards\";\r\n                    }\r\n                }\r\n\r\n                //console.log(currentmenu);\r\n                //console.log(this.props.location.pathname);\r\n                //console.log(parent);\r\n                return <Nav>{links}</Nav>\r\n            }\r\n        }\r\n        \r\n\r\n\r\n        return (\r\n            <div className=\"sidebar menubar\" data-color=\"black\">\r\n\r\n                <div className=\"logo\">\r\n                    {/* <a href=\"/\" className=\"logo-mini\">\r\n                        <div className=\"logo-img\">\r\n                            <img src={logomini} alt=\"react-logo\" className=\"light-logo\" />\r\n                            <img src={logominidark} alt=\"react-logo\" className=\"dark-logo\"/>\r\n                        </div>\r\n                    </a>\r\n                    <a href=\"/\" className=\"logo-full\">\r\n                            <img src={logofull} alt=\"react-logo\" className=\"light-logo\"/>\r\n                            <img src={logofulldark} alt=\"react-logo\" className=\"dark-logo\"/>\r\n                    </a> */}\r\n                </div> \r\n                \r\n                <div className=\"sidebar-wrapper\" ref=\"sidebar\">\r\n                <div className=\"profile-info row\">\r\n                    <div className=\"profile-image col-4\">\r\n                        {/* <a href=\"#!\"> */}\r\n                            <img alt=\"\" src={this.state.profileimg} className=\"img-fluid avatar-image\"/>\r\n                        {/* </a> */}\r\n                    </div>\r\n                    <div className=\"profile-details col-8\">\r\n                        <h3>\r\n                            <a style={{overflow: 'hidden', textOverflow: 'ellipsis'}}></a>\r\n                            <span className=\"profile-status online\"></span>\r\n                        </h3>\r\n                        <p className=\"profile-title\">\r\n                            {/* { \r\n                            this.props.account == \"\"\r\n                            ? <span style={{color:\"white\"}}>MetaMask</span>\r\n                            : <span style={{color:\"#26a69a\"}}>MetaMask</span>\r\n                            } */}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                    <Nav className=\"navigation\">\r\n                        {\r\n                            this.props.routes.map((prop,key) => {\r\n                                if(prop.redirect)\r\n                                    return null;\r\n                                if(prop.type === \"child\")\r\n                                    return null;\r\n                                if(prop.type === \"navgroup\")\r\n                                    return ( \r\n                                      <Navmenugroup name={prop.name} key={key}>\r\n                                      </Navmenugroup>\r\n                                    );\r\n                                if(prop.type === \"dropdown\")\r\n                                    return ( \r\n\r\n                                        <li className={(prop.parentid) + \" \" + (( ( (prop.parentid === currentmenu) && (prop.parentid !== \"\") && (prop.parentid !== \"multipurpose\") ) || (this.state.opendd === prop.name)) ? 'active': '') + ' nav-parent '} data-toggle=\"collapse\" key={key}>\r\n                                            <a to={prop.path} className=\"nav-link\" onClick={() => this.handleOpendd(prop.name)} href=\"#!\">\r\n                                                        <i className={\"i-\"+prop.icon}></i>\r\n                                                        <p>{prop.name}</p>\r\n                                                        <span className=\"badge\">{prop.badge}</span>\r\n                                                        <span className={\"arrow i-arrow-left\"}></span>\r\n                                            </a>\r\n                                            { children(prop.child, prop.parentid) }\r\n                                        </li>\r\n\r\n                                    );\r\n\r\n                                if(prop.type === \"dropdown-backup\")\r\n                                    return ( \r\n                                      <Navmenudropdown name={prop.name} icon={prop.icon} path={prop.path} badge={prop.badge} child={prop.child} key={key} openclass={this.state.opendd === prop.name ? 'activethis': ''}  onClick={() => this.handleOpendd(prop.name)}>\r\n                                      </Navmenudropdown>\r\n                                    );\r\n                                return (\r\n                                    <li className={this.activeRoute(prop.path) + ' nav-parent '} key={key} onClick={() => this.handleOpendd(prop.name)}>\r\n                                        <NavLink to={prop.path} className=\"nav-link\" activeClassName=\"active\">\r\n                                            <i className={\"i-\"+prop.icon}></i>\r\n                                            <p>{prop.name}</p>\r\n                                            <span className=\"badge\">{prop.badge}</span>\r\n                                        </NavLink>\r\n                                  </li>\r\n                                );\r\n                            })\r\n\r\n                        }\r\n\r\n                    </Nav>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport {\r\n    Row, Col\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\nimport swal from \"sweetalert\";\r\nimport bigInt from \"big-integer\";\r\nimport NumericInput from 'react-numeric-input';\r\nimport generateElement from \"../../../generateElement\";\r\nimport web3 from \"web3\";\r\nimport PayzusContractABI from \"../../../contracts/pyzusReferral.json\";\r\nimport firebaseApp from '../../../firebase-config';\r\n\r\nconst database = firebaseApp.database().ref(\"Users\");\r\n\r\nclass FormPremade extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            PayzusContract:null,\r\n            account:null,\r\n            Web3:null,\r\n            loaded:false,\r\n            referrerAddress:\"\",\r\n            tokenNumbers:0,\r\n            price:bigInt(0),\r\n            // rewardsCredited:true,\r\n            // rewards:0,\r\n            WhiteListed:false,\r\n            uid:null\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let temp;\r\n        try{\r\n               await this.setState({uid:this.props.uid})     \r\n            \r\n                    database\r\n                        .child(this.state.uid +'/WhiteListed')\r\n                        .once(\"value\", (snapshot) => {\r\n            \r\n                            temp = snapshot.val();\r\n              \r\n                            this.getValue(temp)\r\n                                                \r\n                        })\r\n                                      \r\n                \r\n\r\n           \r\n            \r\n            const Web3 = new web3(web3.givenProvider);\r\n            const accounts = await Web3.eth.getAccounts();\r\n            console.log(accounts[0]);\r\n            const account = accounts[0];\r\n\r\n            if(account === undefined){\r\n                \r\n                await swal({\r\n                    content: generateElement(`MetaMask is locked. Please Unlock MetaMask and try again`),\r\n                    icon: \"error\",\r\n        \r\n                });\r\n                return\r\n            }\r\n\r\n\r\n            const PayzusContract = new Web3.eth.Contract(PayzusContractABI,\"0x1F28ECA92cE85d9BC2AEa738Db63bfDd0A6F6fAa\");\r\n            // this.setState({PayzusContract})\r\n\r\n            // console.log(this.state.PayzusContract)\r\n            \r\n            \r\n            this.setState({PayzusContract, account, Web3, loaded:true })\r\n            // console.log(temp)\r\n            \r\n        }\r\n\r\n        catch (error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    getValue = (value) => {\r\n        this.setState({WhiteListed:value})\r\n        console.log(this.state.WhiteListed)\r\n        \r\n    }\r\n\r\n    // getUid = (value) => {\r\n    //     this.setState({uid:value})\r\n    //     console.log(this.state.uid)\r\n    // }\r\n\r\n    handleReferrence = async () => {\r\n        const result = await this.state.PayzusContract.methods.addReferrer(this.state.referrerAddress).send({from : this.state.accounts});\r\n        console.log(result);\r\n\r\n        await this.setState({referrerAddress:\"\"})\r\n\r\n        swal({\r\n            content:generateElement(`Referral code Applied`),\r\n            icon:\"success\"\r\n        });\r\n    }\r\n\r\n    handleTokenChange = async (value) => {\r\n        await this.setState({tokenNumbers:value})\r\n        console.log(this.state.tokenNumbers)\r\n        const price = await bigInt(this.state.PayzusContract.methods.priceOf(this.state.tokenNumbers.toString()).call())\r\n        this.setState({price})\r\n        console.log(this.state.price)\r\n    }\r\n\r\n    handleBuyPayzus = async () => {\r\n\r\n        let count;\r\n\r\n        if(this.state.tokenNumbers < 220 || this.state.tokenNumbers > 6750){\r\n            await swal({\r\n                content:generateElement(`Please enter tokens in the defined range`),\r\n                icon:\"error\"\r\n            })\r\n            return\r\n        }\r\n\r\n        else {\r\n\r\n        const result = await this.state.PayzusContract.methods.buyTokens(this.state.tokenNumbers)\r\n            .send({from:this.state.account, value:this.state.price.toString()});\r\n\r\n        console.log(result)\r\n\r\n        await database\r\n                .child(this.state.uid + '/Transactions/count')\r\n                .once('value', (snapshot) => {\r\n                    count = snapshot.val()\r\n                })\r\n        \r\n        await database\r\n                .child(this.state.uid + '/Transactions/' + count)\r\n                .update({txHash:result.transactionHash})\r\n                .then(() => {\r\n                    database\r\n                        .child(this.state.uid + '/Transactions/count')\r\n                        .set(count + 1, (err) => {\r\n                            if(err){\r\n                                console.log(err)\r\n                            }\r\n                        })\r\n                    \r\n                    .then(() => {\r\n                        swal({\r\n                            content:generateElement(`Transaction successfull`),\r\n                            icon:\"success\"\r\n                        })\r\n                    })\r\n                })\r\n\r\n    \r\n        \r\n\r\n        await this.setState({rewardsCredited:false})\r\n\r\n        const events = await this.state.PayzusContract.methods.accounts(this.state.account).call()\r\n\r\n        // await this.setState({rewardsCredited:true})\r\n\r\n        await database\r\n                .child(this.state.uid)\r\n                .update({Rewards:events.reward, DirectReferred:events.referredCount, IndirectReferred:events.referredCountIndirect, Referrer:events.referrer})\r\n                .then(() => {\r\n                    swal({\r\n                        content:generateElement(`Rewards Credited`),\r\n                        icon:\"success\"\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })\r\n\r\n        // this.setState({rewards:events.reward})\r\n        console.log(events.reward);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(!this.state.loaded){\r\n            return <div>Loading ...</div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n                            <div className=\"page-title\">\r\n                                <div className=\"float-left\">\r\n                                    <h1 className=\"title\">Buy PayZus</h1>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {\r\n                                (this.state.WhiteListed) ? \r\n                                (\r\n                                <div className=\"row margin-0\">\r\n                                    <div className=\"col-12\">\r\n                                        <section className=\"box \">\r\n                                            <header className=\"panel_header\" >\r\n                                                <h2 className=\"title float-left\"></h2>\r\n                                                {/* {\r\n                                                    this.state.rewardsCredited\r\n                                                    ? (\r\n                                                        <div style={{float:\"right\",paddingTop:10,paddingRight:50}}>Rewards : {this.state.rewards}</div>\r\n                                                    )\r\n                                                    : (\r\n                                                        <div style={{float:\"right\",paddingTop:10,paddingRight:50}}>Fetching Rewards</div> \r\n                                                    )\r\n                                                } */}\r\n                                                \r\n                                            </header>\r\n                                            <div className=\"content-body\">\r\n                                                <div className=\"row\">\r\n                                                        <div className=\"col-12 col-sm-12 col-md-10 col-lg-10 col-xl-8\">\r\n                                                            <form>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label htmlFor=\"inputAddress\">Enter Referrer address</label>\r\n                                                                        <input type=\"text\"  className=\"form-control\" id=\"inputEmail4\" placeholder=\"\" \r\n                                                                            value={this.state.referrerAddress}\r\n                                                                            onChange={event => this.setState({referrerAddress:event.target.value})}\r\n                                                                        />\r\n\r\n                                                                </div>\r\n                                                                \r\n                                                            </form>\r\n                                                            <div className=\"col-md-12\" style={{textAlign:\"center\",marginTop:'20px'}}>\r\n                                                                <button type=\"submit\" className=\"btn btn-primary\" \r\n                                                                    onClick={this.handleReferrence}\r\n                                                                    style={{width:'150px'}}\r\n                                                                >\r\n                                                                    Avail Referral\r\n                                                                </button>\r\n                                                            </div>        \r\n\r\n                                                            <form>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label htmlFor=\"inputAddress\">Number of Payzus Tokens</label>\r\n                                                                    <NumericInput \r\n                                                                        min={220}\r\n                                                                        max={7500}\r\n                                                                        value={this.state.tokenNumbers}\r\n                                                                        className=\"form-control\"\r\n                                                                        // onChange={value => this.setState({tokenNumbers:value})}\r\n                                                                        onChange={(value) => this.handleTokenChange(value)}\r\n                                                                    />\r\n\r\n                                                                </div>\r\n                                                                <p color=\"muted\">\r\n                                                                    You can only purchase token in the range 220 to 6750.\r\n                                                                </p>\r\n                                                                <div className=\"form-row\">\r\n                                                                    <div className=\"form-group col-md-5\">\r\n                                                                        <label htmlFor=\"inputEmail4\">ETH</label>\r\n                                                                        <input type=\"text\" readOnly className=\"form-control\" id=\"inputEmail4\" placeholder=\"\"\r\n                                                                            value={(this.state.price)/(10**18)}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-md-2\" style={{textAlign:\"center\",paddingTop:'45px'}}>\r\n                                                                        <i className=\"fa fa-exchange\" aria-hidden=\"true\">\r\n                                                                    </i></div>\r\n                                                                    <div className=\"form-group col-md-5\">\r\n                                                                        <label htmlFor=\"inputPassword4\">USD</label>\r\n                                                                        <input type=\"text\" readOnly className=\"form-control\" id=\"inputPassword4\" placeholder=\"\"\r\n                                                                            value={((this.state.price)/(10**18))*395} \r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </form>\r\n                                                                <div className=\"col-md-12\" style={{textAlign:\"center\",marginTop:'20px'}}>\r\n                                                                    <button type=\"submit\" className=\"btn btn-primary\" \r\n                                                                        onClick={this.handleBuyPayzus}\r\n                                                                        style={{width:'150px'}}\r\n                                                                    >\r\n                                                                        Buy\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                \r\n                                                            \r\n\r\n                                                        </div>\r\n                                                    \r\n                                                    \r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </section>\r\n                                    </div>\r\n                                </div>\r\n                                )\r\n                                :\r\n                                (\r\n                                    <div style={{textAlign:\"center\"}}>\r\n                                        <h2> Complete your KYC <br /> and then please wait untill you are WhiteListed</h2>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            }\r\n                                                            \r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormPremade;\r\n","import React from 'react';\r\nimport {\r\n    Table ,\r\n    Row, Col,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\nimport firebaseApp from '../../../firebase-config';\r\n\r\nconst database = firebaseApp.database().ref(\"Users\");\r\n\r\nclass UITables extends React.Component{\r\n   constructor(props){\r\n     super(props);\r\n     this.state = {\r\n       isAvailable:true,\r\n       uid:\"\",\r\n       txArray:[]\r\n     }\r\n   }\r\n\r\n   componentDidMount = async () => {\r\n      // const user = await firebaseApp.auth().currentUser\r\n      // const uid = user.uid;\r\n      await this.setState({uid:this.props.uid});\r\n      console.log(\"uid\",this.props.uid) \r\n\r\n      await database\r\n              .child(this.state.uid + '/Transactions')\r\n              .once('value', snapshot => {\r\n                this.setState({txArray:snapshot.val()})\r\n                \r\n              })\r\n      console.log(this.state.txArray); \r\n          \r\n   }\r\n    \r\n    render(){\r\n      // if(this.state.txArray.length === 0){\r\n      //   return(\r\n      //     <div style={{height:\"500px\"}}>\r\n      //       <div className=\"page-title\" style={{marginTop:\"100px\"}}>\r\n      //         <div className=\"float-left\">\r\n      //          <h1 className=\"title\">No transactions yet</h1>\r\n      //         </div>\r\n      //       </div>\r\n      //     </div>\r\n      //   );\r\n      // }\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n\r\n                    <div className=\"page-title\">\r\n                        <div className=\"float-left\">\r\n                            <h1 className=\"title\">Transaction History</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                          \r\n\r\n                    <div className=\"col-12\">\r\n                        <section className=\"box \">\r\n                            <header className=\"panel_header\">\r\n                                <h2 className=\"title float-left\"></h2>\r\n                                \r\n                            </header>\r\n                            <div className=\"content-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12\">\r\n                            \r\n  \r\n      <h5>Basic</h5><br/>\r\n\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Transaction Hash</th>\r\n            {/* <th>Last Name</th>\r\n            <th>Username</th> */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* {\r\n            this.state.txArray.map((data,index) => (\r\n              <tr>\r\n                <th scope=\"row\"></th>\r\n                <td key={index}>{data}</td>\r\n              </tr>\r\n            ))\r\n          } */}\r\n          {/* <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr> */}\r\n        </tbody>\r\n      </Table>  \r\n     \r\n\r\n      {/* <br/><br/><h5>Striped</h5><br/>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Username</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>   \r\n\r\n\r\n      <br/><br/><h5>Bordered</h5><br/>\r\n\r\n      <Table bordered>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Username</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      <br/><br/><h5>Borderless</h5><br/>\r\n      <Table borderless>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Username</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      <br/><br/><h5>Hoverable</h5><br/>\r\n      <Table hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Username</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Mark</td>\r\n            <td>Otto</td>\r\n            <td>@mdo</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Jacob</td>\r\n            <td>Thornton</td>\r\n            <td>@fat</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Larry</td>\r\n            <td>the Bird</td>\r\n            <td>@twitter</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n     <br/><br/><h5> Responsive Table </h5><br/>\r\n      <Table responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Table heading</th>\r\n            <th>Table heading</th>\r\n            <th>Table heading</th>\r\n            <th>Table heading</th>\r\n            <th>Table heading</th>\r\n            <th>Table heading</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th scope=\"row\">1</th>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">2</th>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n          </tr>\r\n          <tr>\r\n            <th scope=\"row\">3</th>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n            <td>Table cell</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table> */}\r\n                               \r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UITables;\r\n","import moment from 'moment'; // Example for onSort prop\r\nimport React from 'react'; // Import React\r\n//import { render } from 'react-dom'; // Import render method\r\nimport Datatable from 'react-bs-datatable'; // Import this package\r\nimport {\r\n    Row, Col,\r\n} from 'reactstrap';\r\n\r\n\r\n\r\nconst header = [\r\n  { title: 'Assets', prop: 'id', sortable: false, filterable: false },\r\n  { title: 'Price', prop: 'name', sortable: false, filterable: false },\r\n  { title: '1 Day', prop: 'company', sortable: false, filterable: false },\r\n  { title: '30 Days', prop: 'email', sortable: false, filterable: false },\r\n  { title: '90 Days', prop: 'phone', sortable: false, filterable: false },\r\n  { title: 'Market Cap', prop: 'date', sortable: true, filterable: true },\r\n];\r\n\r\nconst body = [\r\n \r\n// {id: 50, name: \"Kevin Bowman\", company: \"Kwimbee\", email: \"kbowman1d@multiply.com\", phone: \"7-(325)789-1257\",     date: moment().subtract(50, 'days').format('Do MMMM YYYY')}\r\n\r\n];\r\n\r\nconst onSortFunction = {\r\n  date(columnValue) {\r\n    // Convert the string date format to UTC timestamp\r\n    // So the table could sort it by number instead of by string\r\n    return moment(columnValue, 'Do MMMM YYYY').valueOf();\r\n  },\r\n};\r\n\r\nconst customLabels = {\r\n  first: '<<',\r\n  last: '>>',\r\n  prev: '<',\r\n  next: '>',\r\n  show: 'Display ',\r\n  entries: ' rows',\r\n  noResults: 'There is no data to be displayed',\r\n};\r\n\r\nclass UIBSDatatable extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            cryptos : [],\r\n            apiResponse:\"\"\r\n        }\r\n    }\r\n\r\n    // callAPI() {\r\n    //     fetch(\"http://localhost:9000/test\")\r\n    //         .then(res => res.text())\r\n    //         .then(res => this.setState({apiResponse: res}))\r\n    //         .catch(err => err);\r\n    // }\r\n\r\n    componentDidMount = () => {\r\n        // this.callAPI();\r\n    }\r\n   \r\n    \r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n\r\n                    <div className=\"page-title\">\r\n                        <div className=\"float-left\">\r\n                            <h1 className=\"title\">Datatables</h1>\r\n                            <p>{this.state.apiResponse}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                          \r\n\r\n                    <div className=\"col-12\">\r\n                        <section className=\"box \">\r\n                            <header className=\"panel_header\">\r\n                                <h2 className=\"title float-left\">Data Tables</h2>\r\n                                \r\n                            </header>\r\n                            <div className=\"content-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 dt-disp\">\r\n                            \r\n  <Datatable\r\n  tableHeader={header}\r\n  tableBody={body}\r\n  keyName=\"userTable\"\r\n  tableClass=\"striped table-hover table-responsive\"\r\n  rowsPerPage={10}\r\n  rowsPerPageOption={[5, 10, 15, 20]}\r\n  initialSort={{prop: \"id\", isAscending: true}}\r\n  onSort={onSortFunction}\r\n  labels={customLabels}\r\n/>\r\n\r\n                               \r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIBSDatatable;\r\n","import General from 'views/general/Dashboard/General.jsx';\r\n \r\nimport GetDetails from 'views/general/Forms/GetDetails.jsx'\r\nimport FormPremade from 'views/general/Forms/Premade.jsx'; \r\n\r\nimport UITables from 'views/general/Tables/Tables.jsx';\r\n/*import UIDatatables from 'views/general/Tables/Datatables.jsx';*/\r\n\r\n/*import UIDatagridsort from 'views/general/Tables/Datagridsort.jsx';*/\r\nimport UIBSDatatable from 'views/general/Tables/BSDatatable.jsx';\r\n\r\n\r\n\r\nvar BASEDIR = \"/app\"\r\n\r\nvar dashRoutes = [\r\n\r\n    { path: BASEDIR+\"/dashboard\", name: \"Dashboard\", icon: \"speedometer\", component: General },\r\n\r\n\r\n    { path: BASEDIR+\"/history\", name: \"history\", icon: \"chart\", component: UITables },\r\n\r\n    { path: BASEDIR+\"/market\", name: \"Market\", icon: \"speedometer\", component: UIBSDatatable },\r\n\r\n    { path: BASEDIR+\"/kyc\", name: \"KYC\", icon: \"speedometer\", component: GetDetails },\r\n\r\n    { path: BASEDIR+\"/buy-payzus\", name: \"Buy Payzus\", icon: \"speedometer\", component: FormPremade },\r\n\r\n\r\n\r\n   \r\n\r\n    { redirect: true, path: BASEDIR+\"/\", pathTo: BASEDIR+\"/dashboard\", name: \"Dashboard\" },\r\n    { redirect: true, path: \"/\", pathTo: BASEDIR+\"/dashboard\", name: \"Dashboard\" }\r\n\r\n];\r\nexport default dashRoutes;\r\n","import React from 'react';\r\nimport {\r\n    Collapse, Navbar, NavbarBrand, Nav,\r\n    Dropdown, DropdownToggle, DropdownMenu, DropdownItem,\r\n    Container\r\n} from 'reactstrap';\r\n\r\n\r\nimport dashboardRoutes from 'routes/general.jsx';\r\n\r\nimport firebaseApp from \"../../../firebase-config\";\r\n\r\nvar IMGDIR = process.env.REACT_APP_IMGDIR;\r\nclass Header extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            userddOpen: false,\r\n            searchOpen: false,\r\n            messagesddOpen: false,\r\n            notificationsddOpen: false,\r\n            color: \"primary\",\r\n            profilename: 'Eric Nelson',\r\n            profileimg: IMGDIR+'/images/profile/avatar-2.jpg',\r\n            accounts:\"\",\r\n            balance:\"\"\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.userddToggle = this.userddToggle.bind(this);\r\n        this.messagesddToggle = this.messagesddToggle.bind(this);\r\n        this.notificationsddToggle = this.notificationsddToggle.bind(this);\r\n        this.searchToggle = this.searchToggle.bind(this);\r\n\r\n    }\r\n\r\n    truncate(str) {\r\n        return str.length > 10  ? str.substring(0,6) + \"...\" + str.substring(38,42): str;\r\n    }\r\n\r\n    truncateBalance(str){\r\n        return str.length > 5  ? str.substring(0,3) : str;\r\n    }\r\n\r\n    toggle() {\r\n        if(this.state.isOpen){\r\n            this.setState({\r\n                color: \"primary\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                color: \"white\"\r\n            });\r\n        }\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n    userddToggle(e){\r\n        this.setState({\r\n            userddOpen: !this.state.userddOpen\r\n        });\r\n    }\r\n    searchToggle(){\r\n        //this.refs.searchbarToggle.classList.toggle('toggled');\r\n        this.setState({\r\n            searchOpen: !this.state.searchOpen\r\n        });\r\n        //console.log(this.state.searchOpen);\r\n        //this.refs.searchbarToggle.classList.toggle('opened');\r\n    }\r\n    messagesddToggle(e){\r\n        this.setState({\r\n            messagesddOpen: !this.state.messagesddOpen\r\n        });\r\n    }\r\n    notificationsddToggle(e){\r\n        this.setState({\r\n            notificationsddOpen: !this.state.notificationsddOpen\r\n        });\r\n    }\r\n    getBrand(){\r\n        var name;\r\n        dashboardRoutes.map((prop,key) => {\r\n            if(prop.collapse){\r\n                 prop.views.map((prop,key) => {\r\n                    if(prop.path === this.props.location.pathname){\r\n                        name = prop.name;\r\n                    }\r\n                    return null;\r\n                })\r\n            } else {\r\n                if(prop.redirect){\r\n                    if(prop.path === this.props.location.pathname){\r\n                        name = prop.name;\r\n                    }\r\n                }else{\r\n                    if(prop.path === this.props.location.pathname){\r\n                        name = prop.name;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        })\r\n        return name;\r\n    }\r\n    openSidebar(){\r\n        document.documentElement.classList.toggle('nav-toggle');\r\n        this.refs.sidebarToggle.classList.toggle('toggled');\r\n\r\n        // close chat bar if open on smaller screens\r\n        if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle-chat');\r\n           // this.refs.chatToggle.classList.remove('toggled');\r\n        }\r\n    }\r\n    openChat(){\r\n        document.documentElement.classList.toggle('nav-toggle-chat');\r\n       // this.refs.chatToggle.classList.toggle('toggled');\r\n\r\n        // close menu bar if open on smaller screens\r\n        if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }\r\n    }\r\n    toggle_grid(){\r\n        document.documentElement.classList.toggle('toggle-grid');\r\n    }\r\n\r\n\r\n    openStyle(){\r\n        document.documentElement.classList.toggle('nav-toggle-style');\r\n       // this.refs.chatToggle.classList.toggle('toggled');\r\n\r\n        // close menu bar if open on smaller screens\r\n        /*if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }*/\r\n    }\r\n    // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n    updateColor(){\r\n        if(window.innerWidth < 993 && this.state.isOpen){\r\n            this.setState({\r\n                color: \"primary\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                color: \"primary\"\r\n            });\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.navtype === \"mini\"){\r\n            document.documentElement.classList.add('nav-toggle');\r\n            this.refs.sidebarToggle.classList.add('toggled');\r\n        } else {\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }\r\n        window.addEventListener(\"resize\", this.updateColor.bind(this));\r\n\r\n            if(this.props.admintype === 'general'){\r\n                this.setState({     \r\n                    profileimg: IMGDIR+'/images/profile/MetaMask-Icon.png',\r\n                    profilename: ''\r\n                });  \r\n              \r\n                }\r\n\r\n\r\n\r\n    }\r\n    componentDidUpdate(e){\r\n        if(window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-toggle') !== -1){\r\n            document.documentElement.classList.toggle('nav-toggle');\r\n            this.refs.sidebarToggle.classList.toggle('toggled');\r\n        }\r\n        if(window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-toggle-chat') !== -1){\r\n            document.documentElement.classList.toggle('nav-toggle-chat');\r\n           // this.refs.chatToggle.classList.toggle('toggled');\r\n        }\r\n    }\r\n\r\n\r\n    handleLogout = () => {\r\n        firebaseApp.auth().signOut()\r\n            .then(function() {\r\n                window.location.href = \"/login\"\r\n                \r\n            })\r\n            .catch(error => {\r\n                var errorMessage = error.message;\r\n                alert(errorMessage)\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            // add or remove classes depending if we are on full-screen-maps page or not\r\n            <Navbar expand=\"lg\"\r\n                className={\r\n                    this.props.location.pathname.indexOf('full-screen-maps') !== -1 ?\r\n                    \"navbar-absolute fixed-top\":\"navbar-absolute fixed-top \"}>\r\n                <Container fluid>\r\n                    <div className=\"navbar-wrapper\">\r\n                        <div className=\"navbar-toggle\">\r\n                            <button type=\"button\" ref=\"sidebarToggle\" className=\"navbar-toggler\" onClick={() => this.openSidebar()}>\r\n                                <i className=\"i-menu\"></i>\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n                           \r\n                                <h2>\r\n                                    {\r\n                                        this.props.account === ''\r\n                                        ? (<p>0 ETH</p>)\r\n                                        : this.truncateBalance(this.props.balance) + ' ETH'\r\n                                    }\r\n                                </h2>\r\n\r\n\r\n                        <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\r\n\r\n\r\n\r\n                    </div>\r\n                    \r\n                    <Collapse isOpen={this.state.isOpen} navbar className=\"navbar-right\" style={{marginRight:\"20px\"}}>\r\n                        {/* <img src=\"/assets/img/logo-mini.png\" alt=\"react-logo\" className=\"avatar-image\" />  */}\r\n                        {\r\n                            this.props.walletConnected\r\n                            ? (this.truncate(this.props.account))\r\n                            : <h5 onClick={this.props.connectWallet} style={{cursor:\"pointer\"}}>Connect Wallet</h5>\r\n                        }\r\n                        \r\n                        <Nav navbar>\r\n                            <Dropdown nav isOpen={this.state.userddOpen} toggle={(e) => this.userddToggle(e)} className=\"userdd\" style={{marginLeft:\"20px\",marginTop:'5px'}}>\r\n                                <DropdownToggle caret nav>\r\n                                   <img src={this.state.profileimg} alt=\"react-logo\" className=\"avatar-image\" style={{height:'25px'}}/> \r\n                                   {/* <span>{this.truncate(this.props.account)}</span> */}\r\n                                   {/* <i class=\"fa fa-user\" aria-hidden=\"true\" style={{marginLeft:\"20px\"}}></i> */}\r\n                                   \r\n                                </DropdownToggle>\r\n                                <DropdownMenu right>\r\n                                    {/* <DropdownItem tag=\"a\"><i className=\"i-wrench\" href=\"#!\"></i> Settings</DropdownItem>\r\n                                    <DropdownItem tag=\"a\"><i className=\"i-user\" href=\"#!\"></i> Profile</DropdownItem>\r\n                                    <DropdownItem tag=\"a\"><i className=\"i-info\" href=\"#!\"></i> Help</DropdownItem> */}\r\n                                    <DropdownItem tag=\"button\" className=\"\" onClick={this.props.disconnect}><i className=\"i-info\"></i> Disconnect Wallet</DropdownItem>\r\n                                    <DropdownItem tag=\"button\" onClick={this.handleLogout}><i className=\"i-lock\"></i> LogOut</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                            {/* <NavItem>\r\n                                <div className=\"navbar-toggle chat-toggle\">\r\n                                    <button type=\"button\" ref=\"chatToggle\" className=\"navbar-toggler\" onClick={() => this.openChat()}>\r\n                                            <i className=\"i-bubbles\"></i>\r\n                                            <span className=\"badge badge-pill badge-primary\">9</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                \r\n\r\n\r\n                            </NavItem> */}\r\n                        </Nav>\r\n                        <div className=\"screensize\" onClick={() => this.toggle_grid()}></div>\r\n                    </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Footer extends React.Component{\r\n    render(){\r\n        return (\r\n            <footer className={\"footer\"\r\n                + (this.props.default ? \" footer-default\":\"\")\r\n            }>\r\n                <Container fluid={this.props.fluid ? true:false}>\r\n                    \r\n                    <div className=\"copyright\">\r\n                        &copy; {1900 + (new Date()).getYear()}, <a href=\"#!\" target=\"_blank\" rel=\"noopener noreferrer\">Payzus</a> | All rights reserved\r\n                    </div>\r\n                </Container>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nFooter.propTypes = {\r\n    default: PropTypes.bool,\r\n    fluid: PropTypes.bool\r\n}\r\n\r\nexport default Footer;\r\n","// ##############################\r\n// // // top bar dropdown data\r\n// #############################\r\n\r\nvar IMGDIR = process.env.REACT_APP_IMGDIR;\r\nconst messages = [\r\n    {avatar: IMGDIR+\"/images/profile/avatar-1.jpg\", name: \"John Doug\", time: \"15 mins ago\", status: \"available\", type: \"read\", msg: 'Sometimes it takes a lifetime to win a battle!'},\r\n    {avatar: IMGDIR+\"/images/profile/avatar-2.jpg\", name: \"Ben Shaw\", time: \"35 mins ago\", status: \"busy\", type: \"read\", msg: 'We are having a get together today. See you soon'},\r\n    {avatar: IMGDIR+\"/images/profile/avatar-3.jpg\", name: \"Harley Stokes\", time: \"45 mins ago\", status: \"away\", type: \"unread\", msg: 'In times like this, it makes true sense to chill'},\r\n    {avatar: IMGDIR+\"/images/profile/avatar-4.jpg\", name: \"Kate Pollard\", time: \"50 mins ago\", status: \"offline\", type: \"read\", msg: 'Making something happen beyond imagination'},\r\n];\r\n\r\nconst notifications = [\r\n    {icon: \"check\", title: \"Email subscriptions done\", time: \"10 mins ago\", status: \"available\", type: \"read\"},\r\n    {icon: \"envelope\", title: \"Server Maintainance time\", time: \"33 mins ago\", status: \"busy\", type: \"read\"},\r\n    {icon: \"paper-plane\", title: \"New users integrated\", time: \"25 mins ago\", status: \"away\", type: \"unread\"},\r\n    {icon: \"user\", title: \"Messages sent to all members\", time: \"40 mins ago\", status: \"offline\", type: \"read\"},\r\n];\r\n\r\n// chat bar data\r\nconst chatgroups = [\r\n    {name: \"Family\", color: \"available\"},\r\n    {name: \"Friends\", color: \"away\"},\r\n    {name: \"Work\", color: \"busy\"},\r\n];\r\n\r\nconst favcontacts = [\r\n    {avatar: IMGDIR+\"/images/profile/avatar-5.jpg\", name: \"Jane King\", status: \"available\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-9.jpg\", name: \"Brooks Larson\", status: \"busy\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-2.jpg\", name: \"Neil Parker\", status: \"away\"},\r\n    {avatar: IMGDIR+\"/images/profile/avatar-4.jpg\", name: \"Denwer Jean\", status: \"offline\" },\r\n];\r\n\r\nconst allcontacts = [\r\n    {avatar: IMGDIR+\"/images/profile/avatar-2.jpg\", name: \"Karl Butler\", status: \"busy\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-1.jpg\", name: \"Mark Warne\", status: \"available\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-6.jpg\", name: \"Jean Denwer\", status: \"offline\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-4.jpg\", name: \"Shaun Busey\", status: \"away\"},\r\n    {avatar: IMGDIR+\"/images/profile/avatar-7.jpg\", name: \"Brooks Shaw\", status: \"busy\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-8.jpg\", name: \"John Nelson\", status: \"available\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-9.jpg\", name: \"Peter Anderson\", status: \"offline\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-11.jpg\", name: \"Carol Blake\", status: \"away\"},\r\n    {avatar: IMGDIR+\"/images/profile/avatar-12.jpg\", name: \"Diana Bailey\", status: \"busy\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-10.jpg\", name: \"Ella Arnold\", status: \"available\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-1.jpg\", name: \"Harry Bower\", status: \"offline\" },\r\n    {avatar: IMGDIR+\"/images/profile/avatar-3.jpg\", name: \"David Bond\", status: \"away\"},\r\n];\r\n\r\nexport {\r\n    chatgroups, // chat groups for chat area in right sidebar\r\n    favcontacts, // favourite contacts for chat area in right sidebar\r\n    allcontacts, // all contacts for chat area in right sidebar\r\n    messages, // messages list for top bar messages drop down\r\n    notifications, // data for <thead> of table in TableList view\r\n};\r\n","import React from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Favcontact extends React.Component{ \r\n    render(){\r\n        var favcontactsList = [];\r\n        for (var i = 0; i < this.props.favcontacts.length; i++) {\r\n            favcontactsList.push(\r\n                <ListGroupItem key={i} className=\"contact\">\r\n                    <div className=\"user-img\">\r\n                        <img src={this.props.favcontacts[i].avatar} alt=\"user avatar\" className=\"avatar-image img-inline\"/>\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                            <span className=\"name\">{ this.props.favcontacts[i].name }</span>\r\n                            <span className=\"status small\">{ this.props.favcontacts[i].status }</span>\r\n                            <span data-status={this.props.favcontacts[i].status} className = \"profile-status float-right\"></span>\r\n                    </div>                        \r\n                </ListGroupItem>\r\n            );\r\n        }\r\n        return (          \r\n                                <div>\r\n                                <ListGroup>\r\n                                       { favcontactsList }\r\n                                </ListGroup>\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nFavcontact.propTypes = {\r\n    favcontacts: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Favcontact;\r\n","import React from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Allcontact extends React.Component{ \r\n    render(){\r\n        var allcontactsList = [];\r\n        for (var i = 0; i < this.props.allcontacts.length; i++) {\r\n            allcontactsList.push(\r\n                <ListGroupItem key={i} className=\"contact\">\r\n                    <div className=\"user-img\">\r\n                        <img src={this.props.allcontacts[i].avatar} alt=\"user avatar\" className=\"avatar-image img-inline\"/>\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                            <span className=\"name\">{ this.props.allcontacts[i].name }</span>\r\n                            <span className=\"status small\">{ this.props.allcontacts[i].status }</span>\r\n                            <span data-status={this.props.allcontacts[i].status} className = \"profile-status float-right\"></span>\r\n                    </div>                        \r\n                </ListGroupItem>\r\n            );\r\n        }\r\n        return (          \r\n                                <div>\r\n                                <ListGroup>\r\n                                       { allcontactsList }\r\n                                </ListGroup>\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nAllcontact.propTypes = {\r\n    allcontacts: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Allcontact;\r\n","import React from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Chatgroup extends React.Component{ \r\n    render(){\r\n        var chatgroupsList = [];\r\n        for (var i = 0; i < this.props.chatgroups.length; i++) {\r\n            chatgroupsList.push(\r\n                <ListGroupItem key={i}>\r\n                    <div className=\"user-info groupname\">\r\n                            <span data-status={this.props.chatgroups[i].color} className = \"profile-status\"></span>\r\n                            <span className=\"name\">{ this.props.chatgroups[i].name }</span>\r\n                    </div>                        \r\n                </ListGroupItem>\r\n            );\r\n        }\r\n        return (          \r\n                                <div>\r\n                                <ListGroup>\r\n                                       { chatgroupsList }\r\n                                </ListGroup>\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nChatgroup.propTypes = {\r\n    chatgroups: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Chatgroup;\r\n","import React from 'react';\r\nimport { DropdownMenu, DropdownItem, } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Notification extends React.Component{\r\n    render(){\r\n        var notificationsList = [];\r\n        for (var i = 0; i < this.props.notifications.length; i++) {\r\n            notificationsList.push(\r\n                <DropdownItem tag=\"a\" className={this.props.notifications[i].type} key={i}>\r\n                    <div className=\"notify-icon\" data-status={this.props.notifications[i].status}>\r\n                        <i className={'i-' + this.props.notifications[i].icon}></i>\r\n                    </div>\r\n                    <div className=\"notify-info\">\r\n                        <span className=\"title\">\r\n                            { this.props.notifications[i].title }\r\n                            <span className=\"time small\">{ this.props.notifications[i].time }</span>\r\n                            <span data-status={this.props.notifications[i].status} className = \"profile-status float-right\"></span>\r\n                        </span>\r\n                    </div>                        \r\n                </DropdownItem>\r\n            );\r\n        }\r\n        return (          \r\n                                <DropdownMenu>\r\n                                       { notificationsList }\r\n                                </DropdownMenu>\r\n        );\r\n    }\r\n}\r\n\r\nNotification.propTypes = {\r\n    notifications: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport { DropdownMenu, DropdownItem, } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Message extends React.Component{ \r\n    render(){\r\n        var messagesList = [];\r\n        for (var i = 0; i < this.props.messages.length; i++) {\r\n            messagesList.push(\r\n                <DropdownItem tag=\"a\" className={this.props.messages[i].type} key={i}>\r\n                    <div className=\"user-img\">\r\n                        <img src={this.props.messages[i].avatar} alt=\"user avatar\" className=\"avatar-image img-inline\"/>\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                        <span className=\"name\">\r\n                            { this.props.messages[i].name }\r\n                            <span className=\"time small\"> - { this.props.messages[i].time }</span>\r\n                            <span data-status={this.props.messages[i].status} className = \"profile-status float-right\"></span>\r\n                        </span>\r\n                        <span className=\"desc small\">\r\n                            { this.props.messages[i].msg }\r\n                        </span>\r\n                    </div>                        \r\n                </DropdownItem>\r\n            );\r\n        }\r\n        return (          \r\n                                <DropdownMenu>\r\n                                       { messagesList }\r\n                                </DropdownMenu>\r\n        );\r\n    }\r\n}\r\n\r\nMessage.propTypes = {\r\n    messages: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n//var BASEDIR = process.env.REACT_APP_BASEDIR;\r\n\r\n\r\nclass Mailbox extends React.Component{ \r\n    render(){\r\n        var mailboxList = [];\r\n        for (var i = 0; i < this.props.mailbox.length; i++) {\r\n            mailboxList.push(\r\n                    <tr className=\"unread\" id=\"mail_msg_1\" key={i}>\r\n                        <td className=\"check\"><input type=\"checkbox\"/></td>\r\n                        <td className=\"imp\">\r\n                            <div className=\"star\"><i className={'icon-xs ' + (this.props.mailbox[i].star === \"1\" ? \"i-star icon-accent\" : \"i-star icon-secondary\")}></i></div>\r\n                        </td>\r\n                        <td className=\"user-img\">\r\n                                <img src={this.props.mailbox[i].avatar} alt=\"user avatar\" className=\"avatar-image img-inline\"/>\r\n                        </td>\r\n                        <td className=\"open-view\">\r\n                            <span className=\"msgtext\"><NavLink to={'#!'}>{ this.props.mailbox[i].msg }</NavLink></span>\r\n                            <span className=\"msgby\">{ this.props.mailbox[i].name }</span>\r\n                        </td>\r\n                        <td className=\"tag\">\r\n                            <span className={\"badge \" + (this.props.mailbox[i].tag === \"Family\"? \"badge-primary\" : \"\") + (this.props.mailbox[i].tag === \"Work\"? \"badge-accent\" : \"\") + (this.props.mailbox[i].tag === \"Friends\"? \"badge-purple\" : \"\")}>{this.props.mailbox[i].tag}</span>\r\n                        </td>\r\n                        <td className=\"timestamp\"><span className=\"msg_time\"><NavLink to={'#!'}>{ this.props.mailbox[i].time }</NavLink></span></td>\r\n                    </tr>\r\n                /*<div tag=\"a\" className={this.props.mailbox[i].type} key={i}>\r\n                    <div className=\"user-img\">\r\n                        <img src={this.props.mailbox[i].avatar} alt=\"user avatar\" className=\"avatar-image img-inline\"/>\r\n                    </div>\r\n                    <div className=\"user-info\">\r\n                        <span className=\"name\">\r\n                            <strong>{ this.props.mailbox[i].name }</strong>\r\n                            <span className=\"time small\"> - { this.props.mailbox[i].time }</span>\r\n                            <span data-status={this.props.mailbox[i].status} className = \"profile-status float-right\"></span>\r\n                        </span>\r\n                        <span className=\"desc small\">\r\n                            { this.props.mailbox[i].msg }\r\n                        </span>\r\n                    </div>                        \r\n                </div>*/\r\n            );\r\n        }\r\n        return (          \r\n                                <div className=\"mail_list col-12\">\r\n                                    <table className=\"table table-responsive\">\r\n                                        <tbody>\r\n                                            { mailboxList }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nMailbox.propTypes = {\r\n    mailbox: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Mailbox;\r\n","import React from 'react';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CardAuthor extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"author\">\r\n                <a href={this.props.link ? this.props.link:\"#\"}>\r\n                    <img className=\"avatar border-gray\" src={this.props.avatar} alt={this.props.avatarAlt} />\r\n                    <h5 className=\"title\">{this.props.title}</h5>\r\n                </a>\r\n                <p className=\"description\">\r\n                    {this.props.description}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCardAuthor.propTypes = {\r\n    // Where the user to be redirected on clicking the avatar\r\n    link: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    avatarAlt: PropTypes.string,\r\n    title: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.node\r\n    ]),\r\n    description: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default CardAuthor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CardCategory extends React.Component{\r\n    render(){\r\n        return (\r\n            <h5 className=\"card-category\">\r\n                {this.props.children}\r\n            </h5>\r\n        );\r\n    }\r\n};\r\n\r\nCardCategory.propTypes = {\r\n    children: PropTypes.any\r\n};\r\n\r\nexport default CardCategory;\r\n","import React from 'react';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button } from 'components';\r\n\r\nclass CardSocials extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"button-container\">\r\n                {\r\n                    this.props.socials.map((prop,key) => {\r\n                        return (\r\n                            <Button color=\"neutral\" icon round size={this.props.size} key={key} href={prop.link}>\r\n                                <i className={prop.icon}></i>\r\n                            </Button>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCardSocials.propTypes = {\r\n    // size of all social buttons\r\n    size: PropTypes.oneOf(['sm','lg']),\r\n    // example: [{icon: \"name of icon\", href=\"href of icon\"},...]\r\n    socials: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default CardSocials;\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n// used to make this component's props into classes\r\nimport cx from 'classnames';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass CustomButton extends Component {\r\n    render() {\r\n        const {\r\n            simple, round, icon, neutral, iconMini, leftLabel, rightLabel, wd, className,\r\n            twitter, facebook, google, linkedin, pinterest, youtube, tumblr, github, behance, dribbble, reddit, stumbleupon,\r\n             ...rest\r\n         } = this.props;\r\n\r\n        var btnClasses = cx({\r\n            'btn-simple': simple,\r\n            'btn-round': round,\r\n            'btn-icon': icon,\r\n            'btn-neutral': neutral,\r\n            'btn-icon btn-icon-mini': iconMini,\r\n            'btn-wd': wd,\r\n        });\r\n\r\n        if(className !== undefined){\r\n            btnClasses += \" \"+className;\r\n        }\r\n\r\n        return (\r\n            <Button className={btnClasses} {...rest}>\r\n                {leftLabel ? (<span className=\"btn-label\"><i className={leftLabel}></i> </span>):null}\r\n                {this.props.children}\r\n                {rightLabel ? (<span className=\"btn-label btn-label-right\"><i className={rightLabel}></i> </span>):null}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nCustomButton.propTypes = {\r\n    simple: PropTypes.bool,\r\n    round: PropTypes.bool,\r\n    icon: PropTypes.bool,\r\n    neutral: PropTypes.bool,\r\n    iconMini: PropTypes.bool,\r\n    wd: PropTypes.bool,\r\n}\r\n\r\nexport default CustomButton;\r\n","import React from 'react';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SimpleCheckbox extends React.Component{\r\n    render(){\r\n        return (\r\n            <FormGroup check {...this.props.formGroupProps}>\r\n                <Label check {...this.props.labelProps}>\r\n                    <Input type=\"checkbox\" {...this.props.inputProps} />\r\n                    <span className=\"form-check-sign\"></span>\r\n                    {this.props.label ? this.props.label : \"\"}\r\n                </Label>\r\n            </FormGroup>\r\n        );\r\n    }\r\n}\r\n\r\nSimpleCheckbox.propTypes = {\r\n    label: PropTypes.node\r\n}\r\n\r\nexport default SimpleCheckbox;\r\n","import React from 'react';\r\nimport {\r\n    FormGroup, Label, Input\r\n} from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CustomRadio extends React.Component{\r\n    render(){\r\n        var classes = \"\";\r\n        if(this.props.formGroupProps !== undefined){\r\n            if(this.props.formGroupProps.className !== undefined){\r\n                classes += \" \" + this.props.formGroupProps.className;\r\n            }\r\n        }\r\n        return (\r\n            <FormGroup check {...this.props.formGroupProps} className={\"form-check-radio\" + classes}>\r\n                <Label check {...this.props.labelProps}>\r\n                    <Input {...this.props.inputProps} type=\"radio\"/>\r\n                    <span className=\"form-check-sign\"></span>\r\n                    {this.props.label ? this.props.label : \"\"}\r\n                </Label>\r\n            </FormGroup>\r\n        );\r\n    }\r\n}\r\n\r\nCustomRadio.propTypes = {\r\n    label: PropTypes.node\r\n}\r\n\r\nexport default CustomRadio;\r\n","import React, { Component } from 'react';\r\nimport { FormGroup, Label, Input, InputGroup, InputGroupAddon } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FieldGroup extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            focus: false\r\n        }\r\n    }\r\n    render(){\r\n        const { label,addonLeft,addonRight, formGroupProps, labelProps, inputProps, inputGroupProps, inputGroupAddonProps } = this.props;\r\n        var classes = \" \";\r\n        if(inputGroupProps !== undefined){\r\n            if(inputGroupProps.className !== undefined){\r\n                classes+=inputGroupProps.className+\" \";\r\n            }\r\n        }\r\n        if(addonLeft !== undefined || addonRight !== undefined)\r\n            return (\r\n                <InputGroup {...inputGroupProps} className={classes+(this.state.focus?\"input-group-focus\":\"\")}>\r\n                    {addonLeft !== undefined ? (<InputGroupAddon {...inputGroupAddonProps}>{addonLeft}</InputGroupAddon>):\"\"}\r\n                    <Input {...inputProps} onFocus={(e) => this.setState({focus:true})} onBlur={(e) => this.setState({focus:false})}/>\r\n                    {addonRight !== undefined ? (<InputGroupAddon {...inputGroupAddonProps}>{addonRight}</InputGroupAddon>):\"\"}\r\n                </InputGroup>\r\n            )\r\n        return (\r\n            inputProps.type === \"radio\" || inputProps.type === \"checkbox\" ? (\r\n                <FormGroup {...formGroupProps} className={inputProps.type === \"radio\" ? \"form-check-radio\":\"\"}>\r\n                    <Label {...labelProps}>\r\n                        <Input {...inputProps} />\r\n                        <span className=\"form-check-sign\"></span>\r\n                        {label ? label : \"\"}\r\n                    </Label>\r\n                </FormGroup>):(\r\n                <FormGroup {...formGroupProps}>\r\n                    {label ? <Label {...labelProps}>{label}</Label>:\"\"}\r\n                    <Input {...inputProps} />\r\n                </FormGroup>)\r\n        );\r\n    }\r\n}\r\n\r\nexport class FormInputs extends Component{\r\n    render(){\r\n        var row = [];\r\n        for(var i = 0; i < this.props.ncols.length ; i++){\r\n            row.push(\r\n                <div key={i} className={this.props.ncols[i]}>\r\n                    <FieldGroup\r\n                        {...this.props.proprieties[i]}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"row\">\r\n                {row}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFormInputs.propTypes = {\r\n    ncols: PropTypes.arrayOf(PropTypes.string),\r\n    proprieties: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default FormInputs;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav } from 'reactstrap';\r\n\r\nclass Navmenudropdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.addClickClass= this.addClickClass.bind(this);\r\n        this.state = {\r\n            activate: false\r\n          }\r\n    }\r\n    addClickClass() {\r\n        this.setState({\r\n            activate: !this.state.activate\r\n          })\r\n    }\r\n\r\n    render() {\r\n        const children = (child) => {\r\n            var links = [];\r\n            if (child) {\r\n                for (var i = 0; i < child.length; i++) {\r\n                    links.push(\r\n                        <li key={i}>\r\n                            <NavLink to={child[i].path} className=\"nav-link\" activeClassName=\"active\">\r\n                                <span>{child[i].name}</span>\r\n                            </NavLink>\r\n                        </li>\r\n                    );\r\n                }\r\n                return <Nav>{links}</Nav>\r\n            }\r\n        }\r\n\r\n        return (\r\n            <li className={(this.state.activate ? 'active': '') + \" \" + this.props.openclass} data-toggle=\"collapse\">\r\n                <a href=\"#!\" to={this.props.path} className=\"nav-link\" onClick={this.addClickClass}>\r\n                                            <i className={\"i-\"+this.props.icon}></i>\r\n                                            <p>{this.props.name}</p>\r\n                                            <span className=\"badge\">{this.props.badge}</span>\r\n                                            <span className={\"arrow i-arrow-left\"}></span>\r\n                </a>\r\n                { children(this.props.child) }\r\n            </li>\r\n        )\r\n  }\r\n}\r\nexport default Navmenudropdown;","import React from 'react';\r\n\r\nclass Navmenugroup extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <li className=\"navgroup\">\r\n                    <div>{this.props.name}</div>\r\n            </li>\r\n        )\r\n  }\r\n}\r\nexport default Navmenugroup;","/***********************************\r\n    // Menu Style Color\r\n    // black, white, teal, purple, red, pink, orange, transparent, image1, image2, image3, image4\r\n***********************************/\r\nconst menuStyle = \"black\";\r\n\r\n\r\n/***********************************\r\n    // Menu Type\r\n    // dark, light, colored\r\n***********************************/\r\nconst menuType = \"dark\";\r\n\r\n\r\n\r\n/***********************************\r\n    // Top Bar Style Color\r\n    // black, white, teal, purple, red, pink, orange, transparent, image1, image2, image3, image4\r\n***********************************/\r\nconst topbarStyle = \"white\";\r\n\r\n\r\n/***********************************\r\n    // Top bar Type\r\n    // dark, light, colored\r\n***********************************/\r\nconst topbarType = \"light\";\r\n\r\n/***********************************\r\n    // Navigation Width\r\n    // default, mini\r\n***********************************/\r\nconst navWidth = \"default\";\r\n\r\n/***********************************\r\n    // Chat Type\r\n    // overlap, squeeze\r\n***********************************/\r\nconst chatType = \"overlap\";\r\n\r\n/***********************************\r\n    // Chat Width\r\n    // closed, open\r\n***********************************/\r\nconst chatWidth = \"closed\";\r\n\r\n\r\nexport {\r\n    menuStyle,\r\n    topbarStyle,\r\n    menuType,\r\n    topbarType,\r\n    navWidth,\r\n    chatWidth,\r\n    chatType,\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nvar BASEDIR = process.env.REACT_APP_BASEDIR;\r\n\r\nclass BlogPosts extends React.Component{ \r\n    render(){\r\n        var blogsList = [];\r\n        for (var i = 0; i < this.props.blogs.length; i++) {\r\n            blogsList.push(\r\n\r\n                        <div className=\"col-12 col-md-6\" key={i}>\r\n                                        <div className=\"blog_post\">\r\n                                            <img className=\"media-object\" src={this.props.blogs[i].image} alt=\"\" />\r\n                                            <h3 className=\"blogtitle\"><NavLink to={BASEDIR+'/ui-blog-item'}>{this.props.blogs[i].title}</NavLink></h3>\r\n                                            <p className=\"post-by\">Written by <a href=\"#!\">{this.props.blogs[i].author}</a> on {this.props.blogs[i].date}.</p>\r\n                                            <p className=\"blog-content\">{this.props.blogs[i].description}</p>\r\n                                        </div>\r\n                        </div>\r\n            );\r\n        }\r\n        return (          \r\n                                <div className=\"row\">\r\n                                       { blogsList }\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nBlogPosts.propTypes = {\r\n    blogs: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default BlogPosts;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\nvar BASEDIR = process.env.REACT_APP_BASEDIR;\r\n\r\nclass SearchPosts extends React.Component{ \r\n    render(){\r\n        var searchList = [];\r\n        for (var i = 0; i < this.props.search.length; i++) {\r\n            searchList.push(\r\n\r\n                                                <div className=\"search_result\" key={i}>\r\n                                                    <div className=\"float-left col-md-3 col-4\">\r\n                                                    <img alt=\"search-result\" className=\"img-fluid\" src={this.props.search[i].image}/>\r\n                                                    </div>\r\n                                                    <div className=\"float-left col-md-9 col-8\">\r\n                                                        <h4 className=\"searchtitle\"><NavLink to={BASEDIR+'/ui-blog-item'}>{this.props.search[i].title}</NavLink></h4>\r\n                                                        <p className=\"searchauthor\">Written by <a href=\"#!\">{this.props.search[i].author}</a> on {this.props.search[i].date}.</p>\r\n                                                        <p>{this.props.search[i].description} <a href=\"#!\" className=\"\"><small>Read More...</small></a></p>\r\n                                                    </div>\r\n                                                </div>\r\n            );\r\n        }\r\n        return (          \r\n                                <div className=\"row\">\r\n                                       { searchList }\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchPosts.propTypes = {\r\n    search: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default SearchPosts;\r\n","import React from 'react';\r\n//import { DropdownMenu, DropdownItem, } from 'reactstrap';\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nvar BASEDIR = process.env.REACT_APP_BASEDIR;\r\n\r\nclass Memberslist extends React.Component{\r\n    render(){\r\n        var membersList = [];\r\n        for (var i = 0; i < this.props.members.length; i++) {\r\n            membersList.push(\r\n\r\n\r\n                                            <div className=\"col-md-6 col-lg-4\" key={i}>\r\n                                                <div className=\"team-member \">\r\n                                                    <div className=\"team-img\">\r\n                                                        <img className=\"img-fluid\" src={this.props.members[i].avatar} alt=\"\" />\r\n                                                    </div>\r\n                                                    <div className=\"team-info\">\r\n                                                        <h3><NavLink to={BASEDIR+\"/ui-profile\"}>{ this.props.members[i].name }</NavLink></h3>\r\n                                                        <span>{ this.props.members[i].position }</span>\r\n                                                        <ul className=\"social-icons list-inline list-unstyled\">\r\n                                                            <li className=\"list-inline-item\"><a href={ this.props.members[i].facebook }><i className=\"i-social-facebook icon-primary icon-xs\"></i></a></li>\r\n                                                            <li className=\"list-inline-item\"><a href={ this.props.members[i].twitter }><i className=\"i-social-twitter icon-primary icon-xs\"></i></a></li>\r\n                                                            <li className=\"list-inline-item\"><a href={ this.props.members[i].linkedin }><i className=\"i-social-linkedin icon-primary icon-xs\"></i></a></li>\r\n                                                        </ul>\r\n                                                        <p>{ this.props.members[i].msg }</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n            );\r\n        }\r\n        return (\r\n                                <div className=\"row\">\r\n                                       { membersList }\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nMemberslist.propTypes = {\r\n    members: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Memberslist;\r\n","import React from 'react';\r\n\r\n// used for making the prop types of this component\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Messagewidget extends React.Component{ \r\n    render(){\r\n        var messagewidgetList = [];\r\n        for (var i = 0; i < this.props.messagewidget.length; i++) {\r\n            messagewidgetList.push(\r\n\r\n\r\n                    <li className=\"unread status-available\" key={i}>\r\n                                                        <a href=\"#!\">\r\n                                                            <div className=\"user-img\">\r\n                                                                <img src={this.props.messagewidget[i].avatar} alt=\"user avatar\" className=\"avatar-image img-inline\"/>\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <span className=\"name\">\r\n                                                                    <span>{ this.props.messagewidget[i].name }</span>\r\n                                                                    <span className=\"time small\">{ this.props.messagewidget[i].time }</span>\r\n                                                                    <span className={\"profile-status float-right \" + ( this.props.messagewidget[i].status) }></span>\r\n                                                                </span>\r\n                                                                <span className=\"desc\">\r\n                                                                    { this.props.messagewidget[i].msg }\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </a>\r\n                    </li>\r\n\r\n            );\r\n        }\r\n        return (          \r\n                                <div className=\"\">\r\n                                       { messagewidgetList }\r\n                                </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessagewidget.propTypes = {\r\n    messagewidget: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Messagewidget;\r\n","import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:8545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React from 'react';\r\n// javascript plugin used to create scrollbars on windows\r\n// import PerfectScrollbar from 'perfect-scrollbar';\r\nimport {\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n    \r\n} from 'react-router-dom';\r\n\r\n// import { Router,Route } from \"react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\n\r\nimport {Footer, ChatSidebar, Stylebar } from 'components';\r\nimport Header from \"../components/common/Header/Header\";\r\nimport Sidebar from \"../components/common/Sidebar/Sidebar\";\r\n\r\nimport General from \"../views/general/Dashboard/General\";\r\nimport UITables from '../views/general/Tables/Tables.jsx';\r\nimport GetDetails from '../views/general/Forms/GetDetails.jsx'\r\nimport FormPremade from '../views/general/Forms/Premade.jsx'; \r\nimport UIBSDatatable from '../views/general/Tables/BSDatatable.jsx';\r\n\r\nimport dashboardRoutes from 'routes/general.jsx';\r\nimport { topbarStyle, menuStyle, menuType, topbarType, navWidth } from 'variables/settings/general.jsx';\r\nimport Web3 from \"web3\"\r\nimport swal from 'sweetalert';\r\nimport generateElement from \"../generateElement\";\r\nimport getWeb3 from \"../getWeb3\"\r\nimport firebaseApp from '../firebase-config';\r\n//var ps;\r\n\r\nconst history = createBrowserHistory();\r\n\r\nclass GeneralLayout extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            menuColor: menuStyle,\r\n            topbarColor: topbarStyle,\r\n            menuType: menuType,\r\n            topbarType: topbarType,\r\n            account:\"0x0\",\r\n            balance:\"\",\r\n            web3:null,\r\n            walletConnected:false,\r\n            uid:null\r\n        };\r\n        this.menuSettings = this.menuSettings.bind(this);\r\n        this.topbarSettings = this.topbarSettings.bind(this);\r\n    }\r\n    \r\n    componentDidMount = async() => {\r\n\r\n        try{\r\n            const web3 = await getWeb3();\r\n            const accounts = await web3.eth.getAccounts();\r\n    \r\n            const accBalance = await web3.eth.getBalance(accounts[0]);\r\n            \r\n            this.setState({account:accounts[0]})\r\n\r\n            const balance = web3.utils.fromWei(accBalance,\"ether\")\r\n\r\n            this.setState({balance})\r\n\r\n            await firebaseApp.auth().onAuthStateChanged(user => {\r\n                if(user){\r\n                    const uid = user.uid;\r\n\r\n                    this.setState({uid})\r\n                }\r\n                console.log(this.state.uid)\r\n            })\r\n            \r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n       \r\n    }\r\n\r\n    connectWallet = async() => {\r\n        \r\n        if(typeof web3 !== 'undefined'){\r\n\r\n            const web3 = new Web3(Web3.givenProvider);\r\n            const network = await web3.eth.net.getNetworkType();\r\n            console.log(network);\r\n            const accounts = await web3.eth.getAccounts()\r\n            const account = accounts[0]\r\n\r\n            if(account === undefined){\r\n                await swal({\r\n                    content: generateElement(`MetaMask is locked. Please Unlock MetaMask and try again`),\r\n                    icon: \"error\",\r\n        \r\n                });\r\n                return\r\n            }\r\n\r\n            await this.setState({account, walletConnected:true})\r\n            console.log(this.state.account)\r\n\r\n            const accBalance = await web3.eth.getBalance(accounts[0]);\r\n            const balance = web3.utils.fromWei(accBalance,\"ether\")\r\n\r\n            this.setState({balance})\r\n            console.log(this.state.balance)\r\n        }\r\n        else{\r\n            swal({\r\n                content: generateElement(`Please Install MetaMask first`),\r\n                icon: \"error\",\r\n            })\r\n        }   \r\n\r\n    }\r\n\r\n\r\n    disconnect = () => {\r\n        this.setState({account:\"\", walletConnected:false})\r\n    }\r\n\r\n    menuSettings(val1,val2) {\r\n        this.setState({\r\n          menuColor: \"black\",\r\n          menuType: \"dark\",\r\n        });\r\n    }\r\n    topbarSettings(val1,val2) {\r\n        this.setState({\r\n          topbarColor: \"transparent\",\r\n          topbarType: \"light\",\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){}\r\n    componentDidUpdate(e) {\r\n      if(e.history.action === \"PUSH\"){\r\n        this.refs.mainPanel.scrollTop = 0;\r\n        document.scrollingElement.scrollTop = 0;\r\n      }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"wrapper\" ref=\"themeWrapper\" data-menu={this.state.menuColor} data-topbar={this.state.topbarColor} data-menutype={this.state.menuType} data-topbartype={this.state.topbarType}>\r\n\r\n                <Header {...this.props} navtype={navWidth} admintype={'general'} account={this.state.account} disconnect = {this.disconnect} balance={this.state.balance} web3 = {this.state.web3} connectWallet = {this.connectWallet} walletConnected={this.state.walletConnected}/>\r\n                <Sidebar {...this.props} routes={dashboardRoutes} admintype={'general'} account={this.state.account}/>\r\n                <div className=\"main-panel\" ref=\"mainPanel\">\r\n\r\n                    <Switch history={history}>\r\n                        <Route exact path=\"/app/dashboard\" name=\"dashboard\" render={props => (<General {...props} uid={this.state.uid}/>)} />\r\n                        <Route exact path=\"/app/history\" name=\"history\" render={props => (<UITables {...props} uid={this.state.uid}/>)} />\r\n                        <Route exact path=\"/app/market\" name=\"market\" render={props => (<UIBSDatatable {...props} uid={this.state.uid}/>)} />\r\n                        <Route exact path=\"/app/kyc\" name=\"kyc\" render={props => (<GetDetails {...props} uid={this.state.uid}/>)}/>\r\n                        <Route exact path=\"/app/buy-payzus\" name=\"buy payzus\" render={props => (<FormPremade {...props} uid={this.state.uid}/>)} />\r\n\r\n                        \r\n                        {/* {\r\n                            dashboardRoutes.map((prop,key) => {\r\n                                if(prop.collapse){\r\n                                    return prop.views.map((prop2,key2) => {\r\n                                        return (\r\n                                            <Route path={prop2.path} component={prop2.component} key={key2} />\r\n                                        );\r\n                                    })\r\n                                }\r\n                                if(prop.redirect)\r\n                                    return (\r\n                                        <Redirect from={prop.path} to={prop.pathTo} key={key} />\r\n                                    );\r\n                                return (\r\n                                    <Route path={prop.path} component={prop.component} key={key} />\r\n                                );\r\n                            })\r\n                        } */}\r\n                    </Switch>\r\n                    <Footer fluid/>\r\n                </div>\r\n                {/* <ChatSidebar {...this.props} routes={dashboardRoutes} chatwidth={chatWidth}  chattype={chatType}/> */}\r\n                {/* <Stylebar menuSettings={this.menuSettings} topbarSettings={this.topbarSettings} /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GeneralLayout;\r\n","import React from 'react';\r\nimport {\r\n    Collapse, Navbar, NavbarBrand, Nav, NavItem,\r\n    Dropdown, DropdownToggle,\r\n    Container\r\n} from 'reactstrap';\r\n\r\n\r\nimport dashboardRoutes from 'routes/general.jsx';\r\n\r\nvar IMGDIR = process.env.REACT_APP_IMGDIR;\r\nclass Header extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            userddOpen: false,\r\n            searchOpen: false,\r\n            messagesddOpen: false,\r\n            notificationsddOpen: false,\r\n            color: \"primary\",\r\n            profilename: 'Eric Nelson',\r\n            profileimg: IMGDIR+'/images/profile/profile.jpg',\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.userddToggle = this.userddToggle.bind(this);\r\n        this.messagesddToggle = this.messagesddToggle.bind(this);\r\n        this.notificationsddToggle = this.notificationsddToggle.bind(this);\r\n        this.searchToggle = this.searchToggle.bind(this);\r\n\r\n    }\r\n\r\n\r\n    toggle() {\r\n        if(this.state.isOpen){\r\n            this.setState({\r\n                color: \"primary\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                color: \"white\"\r\n            });\r\n        }\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n    userddToggle(e){\r\n        this.setState({\r\n            userddOpen: !this.state.userddOpen\r\n        });\r\n    }\r\n    searchToggle(){\r\n        //this.refs.searchbarToggle.classList.toggle('toggled');\r\n        this.setState({\r\n            searchOpen: !this.state.searchOpen\r\n        });\r\n        //console.log(this.state.searchOpen);\r\n        //this.refs.searchbarToggle.classList.toggle('opened');\r\n    }\r\n    messagesddToggle(e){\r\n        this.setState({\r\n            messagesddOpen: !this.state.messagesddOpen\r\n        });\r\n    }\r\n    notificationsddToggle(e){\r\n        this.setState({\r\n            notificationsddOpen: !this.state.notificationsddOpen\r\n        });\r\n    }\r\n    getBrand(){\r\n        var name;\r\n        dashboardRoutes.map((prop,key) => {\r\n            if(prop.collapse){\r\n                 prop.views.map((prop,key) => {\r\n                    if(prop.path === this.props.location.pathname){\r\n                        name = prop.name;\r\n                    }\r\n                    return null;\r\n                })\r\n            } else {\r\n                if(prop.redirect){\r\n                    if(prop.path === this.props.location.pathname){\r\n                        name = prop.name;\r\n                    }\r\n                }else{\r\n                    if(prop.path === this.props.location.pathname){\r\n                        name = prop.name;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        })\r\n        return name;\r\n    }\r\n    openSidebar(){\r\n        document.documentElement.classList.toggle('nav-toggle');\r\n        this.refs.sidebarToggle.classList.toggle('toggled');\r\n\r\n        // close chat bar if open on smaller screens\r\n        if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle-chat');\r\n           // this.refs.chatToggle.classList.remove('toggled');\r\n        }\r\n    }\r\n    openChat(){\r\n        document.documentElement.classList.toggle('nav-toggle-chat');\r\n       // this.refs.chatToggle.classList.toggle('toggled');\r\n\r\n        // close menu bar if open on smaller screens\r\n        if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }\r\n    }\r\n    toggle_grid(){\r\n        document.documentElement.classList.toggle('toggle-grid');\r\n    }\r\n\r\n\r\n    openStyle(){\r\n        document.documentElement.classList.toggle('nav-toggle-style');\r\n       // this.refs.chatToggle.classList.toggle('toggled');\r\n\r\n        // close menu bar if open on smaller screens\r\n        /*if(window.innerWidth < 993){\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }*/\r\n    }\r\n    // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n    updateColor(){\r\n        if(window.innerWidth < 993 && this.state.isOpen){\r\n            this.setState({\r\n                color: \"primary\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                color: \"primary\"\r\n            });\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.navtype === \"mini\"){\r\n            document.documentElement.classList.add('nav-toggle');\r\n            this.refs.sidebarToggle.classList.add('toggled');\r\n        } else {\r\n            document.documentElement.classList.remove('nav-toggle');\r\n            this.refs.sidebarToggle.classList.remove('toggled');\r\n        }\r\n        window.addEventListener(\"resize\", this.updateColor.bind(this));\r\n\r\n            if(this.props.admintype === 'general'){\r\n                this.setState({     \r\n                    profileimg: IMGDIR+'',\r\n                    profilename: ''\r\n                });  \r\n            // } else if(this.props.admintype === 'hospital'){\r\n            //     this.setState({     \r\n            //         profileimg: IMGDIR+'/images/profile/profile-hospital.jpg',    \r\n            //         profilename: 'Dianna Austin'\r\n            //     });  \r\n            // } else if(this.props.admintype === 'university'){\r\n            //     this.setState({     \r\n            //         profilename: 'Henry Gibson',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-university.jpg'    \r\n            //     });  \r\n            // } else if(this.props.admintype === 'crm'){\r\n            //     this.setState({     \r\n            //         profilename: 'Rick  Woods',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-crm.jpg'    \r\n            //     });  \r\n            // } else if(this.props.admintype === 'music'){\r\n            //     this.setState({     \r\n            //         profilename: 'Kerry Flores',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-music.jpg'    \r\n            //     });  \r\n            // } else if(this.props.admintype === 'blog'){\r\n            //     this.setState({     \r\n            //         profilename: 'Alice Gross',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-blog.jpg'    \r\n            //     });  \r\n            // } else if(this.props.admintype === 'ecommerce'){\r\n            //     this.setState({     \r\n            //         profilename: 'Jake  Daniel',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-ecommerce.jpg'    \r\n            //     });  \r\n            // } else if(this.props.admintype === 'freelance'){\r\n            //     this.setState({     \r\n            //         profilename: 'Eric Nelson',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-freelance.jpg'    \r\n            //     });  \r\n            // } else if(this.props.admintype === 'social'){\r\n            //     this.setState({     \r\n            //         profilename: 'Penny Taylor',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-social.jpg'    \r\n            //     });  \r\n            // } else {\r\n            //     this.setState({     \r\n            //         profilename: 'Nancy Spencer',\r\n            //         profileimg: IMGDIR+'/images/profile/profile-general.jpg'    \r\n            //     });  \r\n                }\r\n\r\n\r\n\r\n    }\r\n    componentDidUpdate(e){\r\n        if(window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-toggle') !== -1){\r\n            document.documentElement.classList.toggle('nav-toggle');\r\n            this.refs.sidebarToggle.classList.toggle('toggled');\r\n        }\r\n        if(window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-toggle-chat') !== -1){\r\n            document.documentElement.classList.toggle('nav-toggle-chat');\r\n           // this.refs.chatToggle.classList.toggle('toggled');\r\n        }\r\n    }\r\n\r\n\r\n    // handleLogout = () => {\r\n    //     firebase.auth().signOut()\r\n    //         .then(function() {\r\n    //             window.location.href = \"/login\"\r\n    //         })\r\n    //         .catch(error => {\r\n    //             var errorMessage = error.message;\r\n    //             alert(errorMessage)\r\n    //         })\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            // add or remove classes depending if we are on full-screen-maps page or not\r\n            <Navbar expand=\"lg\"\r\n                className={\r\n                    this.props.location.pathname.indexOf('full-screen-maps') !== -1 ?\r\n                    \"navbar-absolute fixed-top\":\"navbar-absolute fixed-top \"}>\r\n                <Container fluid>\r\n                    <div className=\"navbar-wrapper\">\r\n                        <div className=\"navbar-toggle\">\r\n                            <button type=\"button\" ref=\"sidebarToggle\" className=\"navbar-toggler\" onClick={() => this.openSidebar()}>\r\n                                <i className=\"i-menu\"></i>\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n                            {/* <Dropdown nav isOpen={this.state.messagesddOpen} toggle={(e) => this.messagesddToggle(e)} className=\"navbardd\">\r\n                                <DropdownToggle caret nav>\r\n                                    <i className=\"i-envelope\"></i>\r\n                                    <span className=\"badge badge-pill badge-primary\">3</span>\r\n                                </DropdownToggle>\r\n                                <Messages messages={messages}/>\r\n                            </Dropdown>\r\n\r\n                            <Dropdown nav isOpen={this.state.notificationsddOpen} toggle={(e) => this.notificationsddToggle(e)} className=\"navbardd\">\r\n                                <DropdownToggle caret nav>\r\n                                    <i className=\"i-bell\"></i>\r\n                                    <span className=\"badge badge-pill badge-primary\">7</span>\r\n                                </DropdownToggle>\r\n                                <Notifications notifications={notifications}/>\r\n                            </Dropdown>\r\n    \r\n                            <form className=\"topbar-search-form\">\r\n                                <InputGroup className={\"topbar-search \"+(this.state.searchOpen === true ? \"open\":\"\")}>\r\n                                    <InputGroupAddon addonType=\"append\" onClick={() => this.searchToggle()}><i className=\"i-magnifier\"></i></InputGroupAddon>\r\n                                    <Input placeholder=\"Search...\" />\r\n                                </InputGroup>\r\n                            </form> */}\r\n                                {/* <h2>\r\n                                    {\r\n                                        this.props.account == ''\r\n                                        ? (<p>0 ETH</p>)\r\n                                        : (this.props.balance + ' ETH')\r\n                                    }\r\n                                </h2> */}\r\n\r\n\r\n                        <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\r\n\r\n\r\n\r\n                    </div>\r\n                    \r\n                    <Collapse isOpen={this.state.isOpen} navbar className=\"navbar-right\">\r\n                        <Nav navbar>\r\n                            <Dropdown nav isOpen={this.state.userddOpen} toggle={(e) => this.userddToggle(e)} className=\"userdd\">\r\n                                <DropdownToggle caret nav>\r\n                                   {/* <img src={this.state.profileimg} alt=\"react-logo\" className=\"avatar-image\" />  */}\r\n                                   {/* <span>{this.truncate(this.props.account)}</span> */}\r\n                                </DropdownToggle>\r\n                                {/* <DropdownMenu right>\r\n                                    <DropdownItem tag=\"a\"><i className=\"i-wrench\" href=\"#!\"></i> Settings</DropdownItem>\r\n                                    <DropdownItem tag=\"a\"><i className=\"i-user\" href=\"#!\"></i> Profile</DropdownItem>\r\n                                    <DropdownItem tag=\"a\"><i className=\"i-info\" href=\"#!\"></i> Help</DropdownItem>\r\n                                    <DropdownItem tag=\"button\" className=\"\" ><i className=\"i-info\"></i> Disconnect Wallet</DropdownItem>\r\n                                    <DropdownItem tag=\"button\" ><i className=\"i-lock\"></i> LogOut</DropdownItem>\r\n                                </DropdownMenu> */}\r\n                            </Dropdown>\r\n                            <NavItem>\r\n                                {/* <div className=\"navbar-toggle chat-toggle\">\r\n                                    <button type=\"button\" ref=\"chatToggle\" className=\"navbar-toggler\" onClick={() => this.openChat()}>\r\n                                            <i className=\"i-bubbles\"></i>\r\n                                            <span className=\"badge badge-pill badge-primary\">9</span>\r\n                                    </button>\r\n                                </div> */}\r\n\r\n                                \r\n\r\n\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <div className=\"screensize\" onClick={() => this.toggle_grid()}></div>\r\n                    </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {\r\n    Button, Form, FormGroup, Label, Input,\r\n    \r\n    Row, Col,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\nimport swal from \"sweetalert\";\r\nimport generateElement from \"../../../generateElement\";\r\nimport firebase from \"../../../firebase-config\";\r\nimport firebaseApp from '../../../firebase-config';\r\n\r\nconst database = firebase.database().ref(\"Users\");\r\n\r\nclass FormGrid extends React.Component{\r\n\r\n    constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleDropDown = this.toggleDropDown.bind(this);\r\n    this.toggleSplit = this.toggleSplit.bind(this);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      splitButtonOpen: false,\r\n      name:\"\",\r\n      email:\"\",\r\n      password:\"\",\r\n      // startDate: moment(),\r\n      // file1:null,\r\n      // file2:null\r\n    };\r\n  }\r\n\r\n  toggleDropDown() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n\r\n  toggleSplit() {\r\n    this.setState({\r\n      splitButtonOpen: !this.state.splitButtonOpen\r\n    });\r\n  }\r\n\r\n\r\n  handleRegister = () => {\r\n\r\n    var email = this.state.email;\r\n    var password = this.state.password;\r\n    var name = this.state.name;\r\n\r\n\r\n    firebaseApp.auth().createUserWithEmailAndPassword(email,password)\r\n      .then(() => {\r\n\r\n          var user = firebaseApp.auth().currentUser;\r\n\r\n          var uid = user.uid;\r\n\r\n          var email_varified = user.emailVerified;\r\n\r\n          // this.setState({email:\"\", name:\"\", password:\"\"})\r\n\r\n          if(!email_varified){\r\n            user.sendEmailVerification().then(function() {\r\n              // Email sent.\r\n              // alert(\"email varification link has been sent\")\r\n              swal({\r\n                content: generateElement(`Email varification link is sent to your email Id. Please verify !`),\r\n                icon: \"info\",\r\n              });\r\n              \r\n              database\r\n                .child(uid)\r\n                .set({Name:name, Email:email, WhiteListed: false, KYCSubmitted:false, Rewards:0, DirectReferred:0, IndirectReferred:0, Referrer:'0x00'})\r\n                .then(() => {\r\n                  database\r\n                    .child(uid + '/Transactions')\r\n                    .update({count:0})\r\n                  \r\n                })\r\n                .catch(error => {\r\n                  console.log(error)\r\n                })\r\n\r\n              \r\n            }).catch(function(error) {\r\n              // An error happened.\r\n              console.log(error)\r\n            });\r\n          }\r\n          \r\n          else{\r\n            window.location.href= \"/zestreact\"+\"/login\";\r\n          }\r\n\r\n          this.setState({email:\"\", name:\"\", password:\"\"})\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n       \r\n  }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n\r\n                    <div className=\"page-title\">\r\n                        <div className=\"float-left\">\r\n                            <h1 className=\"title\">Register form</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"col-12\">\r\n                        <section className=\"box \">\r\n                            <header className=\"panel_header\">\r\n                                <h2 className=\"title float-left\">Register</h2>\r\n                                \r\n                            </header>\r\n                            <div className=\"content-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-8 col-md-9 col-10\">\r\n\r\n\r\n\r\n\r\n<Form>  \r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleName\" sm={12}>Name</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"text\" name=\"name\" id=\"exampleName\" placeholder=\"\" \r\n              value={this.state.name}\r\n              onChange={event => this.setState({name:event.target.value})}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleEmail\" sm={12}>Email</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"\" \r\n              value={this.state.email}\r\n              onChange={event => this.setState({email:event.target.value})}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"examplePassword\" sm={12}>Password</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"\" \r\n              value={this.state.password}\r\n              onChange={event => this.setState({password:event.target.value})}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        \r\n      </Form>\r\n      <Button onClick={(event) => this.handleRegister(event)}>Register</Button>\r\n      \r\n      \r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n\r\n                    \r\n                    \r\n                    \r\n\r\n\r\n\r\n                                \r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormGrid;\r\n","\r\n// import GeneralLayout from 'layouts/General.jsx';\r\nimport UIBSDatatable from 'views/general/Tables/BSDatatable.jsx';\r\n\r\nimport Register from \"../views/general/Forms/Register\";\r\nimport Login from \"../views/general/Forms/Login\";\r\n\r\n\r\nvar indexRoutes = [\r\n\r\n    \r\n    { path: \"/register\", name: \"Register\", icon:\"speedometer\", component: Register },\r\n    { path: \"/login\", name: \"Login\", icon:\"speedometer\", component: Login },\r\n    { path: \"/market\",icon:\"speedometer\", name: \"Market\", component: UIBSDatatable },\r\n    \r\n    \r\n];\r\n\r\nexport default indexRoutes;\r\n","import React from 'react';\r\nimport {\r\n    Button, Form, FormGroup, Label, Input,\r\n    \r\n    Row, Col,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\n\r\nimport swal from \"sweetalert\";\r\nimport generateElement from \"../../../generateElement\";\r\nimport firebaseApp from \"../../../firebase-config\";\r\n\r\n\r\nclass FormGrid extends React.Component{\r\n\r\n    constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleDropDown = this.toggleDropDown.bind(this);\r\n    this.toggleSplit = this.toggleSplit.bind(this);\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      splitButtonOpen: false,\r\n      email:\"\",\r\n      password:\"\"\r\n    };\r\n  }\r\n\r\n  // componentDidMount = async () => {\r\n  //   await firebaseApp.auth().onAuthStateChanged(user => {\r\n  //     if(user){\r\n  //       window.location.href = \"/app/dashboard\";\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  toggleDropDown() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n\r\n  toggleSplit() {\r\n    this.setState({\r\n      splitButtonOpen: !this.state.splitButtonOpen\r\n    });\r\n  }\r\n\r\n\r\n  handleLogin = (event) => {\r\n    event.preventDefault();\r\n\r\n    var email = this.state.email;\r\n    var password = this.state.password;\r\n\r\n    firebaseApp.auth().signInWithEmailAndPassword(email,password)\r\n        .then(() => {\r\n\r\n          var user = firebaseApp.auth().currentUser;\r\n\r\n          var emailVarified = user.emailVerified;\r\n\r\n          if(emailVarified){\r\n            window.location.href=\"app/dashboard\"\r\n            // this.props.history.push(\"/app/dashboard\");\r\n          }\r\n\r\n          else{\r\n            \r\n            swal({\r\n              content: generateElement(`Please verify the email first`),\r\n              icon: \"error\",\r\n            });\r\n          }\r\n\r\n\r\n            this.setState({email:\"\",password:\"\"})\r\n        })\r\n        .catch(error => {\r\n            var errorMessage = error.message;\r\n            alert(errorMessage);\r\n        })\r\n  }\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n\r\n                    <div className=\"page-title\">\r\n                        <div className=\"float-left\">\r\n                            <h1 className=\"title\">Login form</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"col-12\">\r\n                        <section className=\"box \">\r\n                            <header className=\"panel_header\">\r\n                                <h2 className=\"title float-left\">Login</h2>\r\n                                \r\n                            </header>\r\n                            <div className=\"content-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-8 col-md-9 col-10\">\r\n\r\n\r\n\r\n\r\n<Form>  \r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleEmail\" sm={12}>Email</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"\" \r\n              value={this.state.email}\r\n              onChange={event => this.setState({email:event.target.value})}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"examplePassword\" sm={12}>Password</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"\" \r\n              value={this.state.password}\r\n              onChange={event => this.setState({password:event.target.value})}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        {/* <FormGroup row>\r\n          <Label htmlFor=\"examplePassword\" sm={12}>Date of Birth</Label>\r\n          <Col sm={12}>\r\n            <DatePicker selected={this.state.startDate} onChange={this.handleChange} \r\n\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleFile\" sm={12}>Aadhar</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"file\" name=\"file\" id=\"exampleFile\" \r\n              onChange={event => this.onFileUpload1(event)}\r\n              onClick={(e) => (e.target.value = null)}\r\n            />\r\n            <FormText color=\"muted\">\r\n              This is some placeholder block-level help text for the above input.\r\n              It's a bit lighter and easily wraps to a new line.\r\n            </FormText>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleFile\" sm={12}>PanCard</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"file\" name=\"file\" id=\"exampleFile\" \r\n              onChange={event => this.onFileUpload2(event)}\r\n              onClick={(e) => (e.target.value = null)}\r\n            />\r\n            <FormText color=\"muted\">\r\n              This is some placeholder block-level help text for the above input.\r\n              It's a bit lighter and easily wraps to a new line.\r\n            </FormText>\r\n          </Col>\r\n        </FormGroup> */}\r\n        {/* <FormGroup row>\r\n          <Label htmlFor=\"exampleSelect\" sm={12}>Select</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"select\" name=\"select\" id=\"exampleSelect\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleSelectMulti\" sm={12}>Select Multiple</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleText\" sm={12}>Text Area</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"exampleFile\" sm={12}>File</Label>\r\n          <Col sm={12}>\r\n            <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n            <FormText color=\"muted\">\r\n              This is some placeholder block-level help text for the above input.\r\n              It's a bit lighter and easily wraps to a new line.\r\n            </FormText>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup tag=\"fieldset\" row>\r\n          <label className=\"col-form-label col-sm-2\">Radio Buttons</label>\r\n          <Col sm={12}>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio2\" />{' '}\r\n                Option one is this and that—be sure to include why it's great\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio2\" />{' '}\r\n                Option two can be something else and selecting it will deselect option one\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup check disabled>\r\n              <Label check>\r\n                <Input type=\"radio\" name=\"radio2\" disabled />{' '}\r\n                Option three is disabled\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label htmlFor=\"checkbox2\" sm={12}>Checkbox</Label>\r\n          <Col sm={{ size: 10 }}>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" id=\"checkbox2\" />{' '}\r\n                Check me out\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup> */}\r\n        {/* <FormGroup>\r\n            <Button onClick={() => this.handleRegister(this.state.email, this.state.password)}>Submit</Button>\r\n        </FormGroup> */}\r\n      </Form>\r\n      <Button onClick={(event) => this.handleLogin(event)}>Login</Button>\r\n      {/* <Button onClick={(event) => this.final(event)}>final</Button> */}\r\n      \r\n      {/* <Button onClick={this.handleLoginWithGoogle}>Login With Google</Button> */}\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n\r\n                    \r\n                    \r\n                    \r\n\r\n\r\n\r\n                                \r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormGrid;\r\n","\r\nimport GeneralLayout from 'layouts/General.jsx';\r\nimport LockedLayout from 'layouts/Locked.jsx';\r\n\r\n\r\nvar BASEDIR = \"/app\";\r\n\r\n\r\nvar indexRoutes = [\r\n    \r\n    \r\n    { path: BASEDIR+\"/\", name: \"Dashboard\", component: GeneralLayout },\r\n    \r\n    { path: \"/\", name: \"Dashboard\", component: LockedLayout },\r\n    \r\n    { path: BASEDIR + \"/\", name: \"Home\", component: GeneralLayout },\r\n    // { path: \"/\", name: \"Home\", component: GeneralLayout },\r\n   \r\n    \r\n\r\n    \r\n    \r\n];\r\n\r\nexport default indexRoutes;\r\n","import React from 'react';\r\n// javascript plugin used to create scrollbars on windows\r\n// import PerfectScrollbar from 'perfect-scrollbar';\r\nimport {\r\n    Route,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\n\r\nimport Header from \"../components/common/Header/LockedHeader\";\r\nimport Footer from \"../components/common/Footer/Footer\";\r\nimport Sidebar from \"../components/common/Sidebar/LockSidebar\"\r\n\r\nimport lockedRoutes from 'routes/locked.jsx';\r\nimport { topbarStyle, menuStyle, menuType, topbarType, navWidth } from 'variables/settings/general.jsx';\r\n\r\n//var ps;\r\n\r\nclass GeneralLayout extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            menuColor: menuStyle,\r\n            topbarColor: topbarStyle,\r\n            menuType: menuType,\r\n            topbarType: topbarType,\r\n            // account:\"\",\r\n            // balance:\"\",\r\n            // web3:null\r\n        };\r\n        this.menuSettings = this.menuSettings.bind(this);\r\n        this.topbarSettings = this.topbarSettings.bind(this);\r\n    }\r\n    \r\n    // componentDidMount = async() => {\r\n\r\n    //     try{\r\n    //         const web3 = await getWeb3();\r\n    //         const accounts = await web3.eth.getAccounts();\r\n    \r\n    //         const accBalance = await web3.eth.getBalance(accounts[0]);\r\n            \r\n    //         this.setState({account:accounts[0]})\r\n\r\n    //         const balance = web3.utils.fromWei(accBalance,\"ether\")\r\n\r\n    //         this.setState({balance})\r\n            \r\n    //     }catch(error){\r\n    //         console.log(error)\r\n    //     }\r\n       \r\n    // }\r\n\r\n    disconnect = () => {\r\n        this.setState({account:\"\"})\r\n    }\r\n\r\n    menuSettings(val1,val2) {\r\n        this.setState({\r\n          menuColor: val1,\r\n          menuType: val2,\r\n        });\r\n    }\r\n    topbarSettings(val1,val2) {\r\n        this.setState({\r\n          topbarColor: val1,\r\n          topbarType: val2,\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){}\r\n    componentDidUpdate(e) {\r\n      if(e.history.action === \"PUSH\"){\r\n        this.refs.mainPanel.scrollTop = 0;\r\n        document.scrollingElement.scrollTop = 0;\r\n      }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"wrapper\" ref=\"themeWrapper\" data-menu={this.state.menuColor} data-topbar={this.state.topbarColor} data-menutype={this.state.menuType} data-topbartype={this.state.topbarType}>\r\n\r\n                <Header {...this.props} navtype={navWidth} admintype={'general'} />\r\n                <Sidebar {...this.props} routes={lockedRoutes} admintype={'general'} />\r\n                <div className=\"main-panel\" ref=\"mainPanel\">\r\n                    <Switch>\r\n                        {\r\n                            lockedRoutes.map((prop,key) => {\r\n                                if(prop.collapse){\r\n                                    return prop.views.map((prop2,key2) => {\r\n                                        return (\r\n                                            <Route path={prop2.path} component={prop2.component} key={key2}/>\r\n                                        );\r\n                                    })\r\n                                }\r\n                                if(prop.redirect)\r\n                                    return (\r\n                                        <Redirect from={prop.path} to={prop.pathTo} key={key}/>\r\n                                    );\r\n                                return (\r\n                                    <Route path={prop.path} component={prop.component} key={key}/>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Switch>\r\n                    <Footer fluid/>\r\n                </div>\r\n                {/* <ChatSidebar {...this.props} routes={lockedRoutes} chatwidth={chatWidth}  chattype={chatType}/>\r\n                <Stylebar menuSettings={this.menuSettings} topbarSettings={this.topbarSettings} /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GeneralLayout;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport {\r\n    Router,\r\n    Route,\r\n    Switch\r\n} from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n/*import 'font-awesome/css/font-awesome.min.css';*/\r\nimport 'assets/scss/zest-admin.css';\r\nimport 'assets/fonts/simple-line-icons.css';\r\n\r\nimport indexRoutes from 'routes/index.jsx';\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n    \r\n    <Router history={hist} basename={process.env.REACT_APP_BASEDIR}>\r\n        <Switch>\r\n            {\r\n                indexRoutes.map((prop,key) => {\r\n                    //console.log(prop.path + prop.key);\r\n                    return ( \r\n                        <Route\r\n                            path={prop.path}\r\n                            key={key}\r\n                            component={prop.component}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </Switch>\r\n    </Router>\r\n, document.getElementById('root'));\r\n"],"sourceRoot":""}